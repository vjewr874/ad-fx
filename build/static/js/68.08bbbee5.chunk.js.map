{"version":3,"sources":["views/forms/form-elements/file-uploader/FileUploaderBasic.js","views/pages/coin/index.js"],"names":["FileUploaderBasic","setPreviewArr","previewArr","isDelete","disabled","isLarge","uppy","Uppy","meta","type","restrictions","maxNumberOfFiles","autoProceed","use","thumbnailGenerator","on","file","preview","toDataURL","dataUrl","booksImageUrl","isChange","Card","CardBody","length","map","item","index","className","style","position","float","href","target","width","height","borderRadius","src","alt","onClick","newData","filter","_","index2","DefaultFilter","skip","limit","order","key","value","CoinTableServerSide","serverSideColumns","name","selector","sortable","maxWidth","minWidth","cell","row","walletBalanceUnitDisplayName","walletBalanceUnitAvatar","marginRight","userSellPrice","formatToUSDPrice","walletBalanceUnitId","convertPrice","originalPrice","walletBalanceUnitCode","UncontrolledDropdown","DropdownToggle","color","size","caret","DropdownMenu","right","DropdownItem","e","preventDefault","setModal","setUserData","messageSuccess","id","Service","send","method","path","data","query","then","res","statusCode","message","toast","success","getData","paramsFilter","warn","useState","setParamsFilter","modal","currentPage","setCurrentPage","rowsPerPage","total","setTotal","items","setItems","isLoading","setIsLoading","searchValue","setSearchValue","label","useForm","defaultValues","register","errors","handleSubmit","userData","params","isNoLoading","newParams","Object","keys","forEach","token","window","localStorage","getItem","newToken","replace","headers","Authorization","clear","getDataSearch","debounce","useEffect","handleOnchange","Row","Col","sm","Label","for","Input","bsSize","onChange","searchText","handleFilter","Button","Ripple","noHeader","pagination","paginationServer","columns","sortIcon","paginationComponent","count","Number","Math","ceil","toFixed","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","progressPending","Modal","isOpen","toggle","ModalHeader","ModalBody","Form","onSubmit","handleAddPaymentData","FormGroup","innerRef","required","invalid","placeholder","arrayItem","imageData","imageFormat","setTimeout","memo"],"mappings":"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","file":"static/js/68.08bbbee5.chunk.js","sourcesContent":["import { toDataURL } from '../../../../helper/common'\nimport Uppy from '@uppy/core'\nimport thumbnailGenerator from '@uppy/thumbnail-generator'\nimport { DragDrop } from '@uppy/react'\nimport { Card, CardBody } from 'reactstrap'\n\nconst FileUploaderBasic = ({ setPreviewArr, previewArr, isDelete, disabled, isLarge }) => {\n\n\n  const uppy = new Uppy({\n    meta: { type: 'avatar' },\n    restrictions: { maxNumberOfFiles: 1 },\n    autoProceed: true\n  })\n\n  uppy.use(thumbnailGenerator)\n\n  uppy.on('thumbnail:generated', (file, preview ) => {\n    toDataURL(\n      preview,\n      (dataUrl) => {\n        const newItem = {\n          booksImageUrl: dataUrl,\n          isChange: true\n        }\n        setPreviewArr([newItem])\n      }\n    )\n  })\n\n  const renderPreview = () => {\n    if (previewArr.length) {\n      return previewArr.map((item, index) => <div className='rounded mt-2 mr-1' style={{ position: \"relative\", float: 'left' }}>\n        \n         <a href={item.booksImageUrl} target=\"_blank\">\n         <img key={index} style={isLarge? { width: \"100%\", height: \"170px\", borderRadius: \"50%\" } :  { width: \"100px\", height: \"100px\", borderRadius: \"50%\" }} src={item.booksImageUrl} alt='avatar' /> \n         </a>\n         {\n           isDelete? (\n            <div className=\"deleteImage\" onClick={() => {\n              const newData = previewArr.filter((_, index2) => index2 !== index)\n              setPreviewArr([...newData])\n            }}>X</div>\n           ):null\n         }\n        </div>)\n    } else {\n      return null\n    }\n  }\n  return (\n    <Card>\n\n      <CardBody>\n        {\n          disabled? null :  <DragDrop  disabled={disabled} uppy={uppy} />\n        }\n       \n        {renderPreview()}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default FileUploaderBasic\n","// @ts-nocheck\n// ** React Imports\nimport { Fragment, useState, useEffect, memo } from 'react'\n// ** Store & Actions\nimport { useDispatch } from 'react-redux'\nimport { toast } from 'react-toastify';\nimport { MoreVertical, Edit, Delete } from 'react-feather'\nimport _ from 'lodash'\nimport './index.scss'\nimport { useForm } from 'react-hook-form'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport Service from '../../../services/request'\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown, } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport { formatToPrice, formatToUSDPrice } from \"./../../../helper/common\"\nimport FileUploaderBasic from '../../forms/form-elements/file-uploader/FileUploaderBasic'\nimport {\n  Card, Input, Label, Row, Col, UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle, Modal, ModalHeader, ModalBody,\n  Button, FormGroup, Form\n} from 'reactstrap'\nimport 'uppy/dist/uppy.css'\nimport '@uppy/status-bar/dist/style.css'\nimport '@styles/react/libs/file-uploader/file-uploader.scss'\n\nconst DefaultFilter = {\n  filter: {\n   \n  },\n  skip: 0,\n  limit: 20,\n  order: {\n    key: \"createdAt\",\n    value: \"desc\"\n  }\n}\nconst List_Search_Filter = [\n  {\n    value: \"walletBalanceUnitCode\",\n    label: \"Mã Coin\"\n  },\n  {\n    label: \"Tên Coin\",\n    value: \"walletBalanceUnitDisplayName\"\n  },\n  {\n   value: \"originalPrice\",\n   label: \"Giá gốc\"\n  }\n]\nconst CoinTableServerSide = () => {\n  // ** Store Vars\n  const serverSideColumns = [\n    {\n      name: 'ID',\n      selector: 'walletBalanceUnitId',\n      sortable: true,\n      maxWidth: '60px'\n    },\n    {\n      name: 'Tên',\n      selector: 'walletBalanceUnitDisplayName',\n      sortable: true,\n      minWidth: '200px',\n      cell: (row) => {\n        const { walletBalanceUnitDisplayName, walletBalanceUnitAvatar } = row\n        return (\n          <div>\n            {walletBalanceUnitAvatar? <img height={15} width={15} style={{marginRight: \"10px\", borderRadius: \"100px\"}} src={walletBalanceUnitAvatar} alt=\"test\"/> :null}    {walletBalanceUnitDisplayName} \n          </div>\n        )\n      }\n    },\n    {\n      name: 'Mã',\n      selector: 'walletBalanceUnitCode',\n      sortable: true,\n      minWidth: '200px'\n    },\n    // {\n    //   name: 'Giá đại lý bán',\n    //   selector: 'agencySellPrice',\n    //   sortable: true,\n    //   maxWidth: '200px',\n    //   cell: (row) => {\n    //     const { agencySellPrice } = row\n    //     return (\n    //       <div>\n    //         {formatToPrice(agencySellPrice)}\n    //       </div>\n    //     )\n    //   }\n    // },\n    {\n      name: 'Giá người dùng bán\t',\n      selector: 'userSellPrice',\n      sortable: true,\n      maxWidth: '200px',\n      cell: (row) => {\n        const { userSellPrice } = row\n        return (\n          <div>\n            {formatToUSDPrice(userSellPrice)}\n          </div>\n        )\n      }\n    },\n   \n    {\n      name: 'Tác vụ',\n      selector: 'action',\n      cell: (row) => {\n        const {\n          walletBalanceUnitId,\n          // agencySellPrice,\n          convertPrice,\n          originalPrice,\n          userSellPrice,\n          walletBalanceUnitCode,\n          walletBalanceUnitDisplayName,\n          walletBalanceUnitAvatar\n        } = row\n        return (\n          <UncontrolledDropdown>\n            <DropdownToggle className='icon-btn hide-arrow' color='transparent' size='sm' caret>\n              <MoreVertical size={15} />\n            </DropdownToggle>\n            <DropdownMenu right>\n              <DropdownItem href='/' onClick={e => {\n                e.preventDefault(); setModal(true); setUserData({\n                  walletBalanceUnitId,\n                  // agencySellPrice,\n                  convertPrice,\n                  originalPrice,\n                  userSellPrice,\n                  walletBalanceUnitCode,\n                  walletBalanceUnitDisplayName,\n                  walletBalanceUnitAvatar\n                })\n              }}>\n                <Edit className='mr-50' size={15} /> <span className='align-middle'>Sửa</span>\n              </DropdownItem>\n              <DropdownItem href='/' onClick={e => {\n                e.preventDefault();\n                handleDeleteData({\n                  id: walletBalanceUnitId\n                \n                })\n              }}>\n                <Delete className='mr-50' size={15} /> <span className='align-middle'>Xoá</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        )\n      }\n    }\n  ]\n  const [paramsFilter, setParamsFilter] = useState(DefaultFilter)\n \n  // ** States\n  const [modal, setModal] = useState(false)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(20)\n  const [total, setTotal] = useState(20)\n  const [items, setItems] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [searchValue, setSearchValue] = useState('')\n  const [searchField, setSearchField] = useState({\n    value: \"walletBalanceUnitCode\",\n    label: \"Mã Coin\"\n  })\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n  // ** React hook form vars\n  const { register, errors, handleSubmit } = useForm({\n    defaultValues: {}\n  })\n  const [userData, setUserData] = useState({})\n\n  function getData(params, isNoLoading) {\n    const newParams = {\n      ...params\n    }\n    if (!isNoLoading) {\n      setIsLoading(true)\n    }\n    Object.keys(newParams.filter).forEach(key => {\n      if (!newParams.filter[key] || newParams.filter[key] === '') {\n        delete newParams.filter[key]\n      }\n    })\n    const token = window.localStorage.getItem('accessToken')\n\n    if (token) {\n      const newToken = token.replace(/\"/g, \"\");\n\n      Service.send({\n        method: 'POST', path: 'WalletBalanceUnit/find', data: newParams, query: null, headers: {\n          Authorization: `Bearer ` + newToken\n        }\n      }).then(res => {\n        if (res) {\n          const { statusCode, data, message } = res\n          setParamsFilter(newParams)\n          if (statusCode === 200) {\n            setTotal(data.total)\n            setItems(data.data)\n          } else {\n            toast.warn(message || 'Đã có lỗi xảy ra!')\n          }\n        } else {\n          setTotal(1)\n          setItems([])\n        }\n        if (!isNoLoading) {\n          setIsLoading(false)\n        }\n      })\n    } else {\n      window.localStorage.clear()\n    }\n  }\n\n  function handleUpdateData(item, messageSuccess) {\n   \n      Service.send({\n        method: 'POST', path: 'WalletBalanceUnit/updateById', data: item, query: null\n      }).then(res => {\n        if (res) {\n          const { statusCode, message } = res\n          if (statusCode === 200) {\n            toast.success(messageSuccess || 'Tác vụ thành công!')\n            getData(paramsFilter)\n          } else {\n            toast.warn(message || 'Đã có lỗi xảy ra!')\n          }\n        }\n      })\n    \n  }\n\n  function uploadMediaFile(item) {\n   \n    Service.send({\n      method: 'POST', path: 'Upload/uploadMediaFile', data: item, query: null\n    }).then(res => {\n      if (res) {\n        const { statusCode, message, data } = res\n        if (statusCode === 200) {\n           setTimeout(()=>{\n            toast.success( 'Tác vụ thành công!')\n            setUserData({\n              ...userData,\n              walletBalanceUnitAvatar: data\n            })\n           }, 2000)\n           \n        } else {\n          toast.warn(message || 'Đã có lỗi xảy ra!')\n        }\n      }\n    })\n  \n}\n\n  function handleDeleteData(item, messageSuccess) {\n   \n    Service.send({\n      method: 'POST', path: 'WalletBalanceUnit/deleteById', data: item, query: null\n    }).then(res => {\n      if (res) {\n        const { statusCode, message } = res\n        if (statusCode === 200) {\n          toast.success(messageSuccess || 'Action delete successful!')\n          getData(paramsFilter)\n        } else {\n          toast.warn(message || 'Đã có lỗi xảy ra!')\n        }\n      }\n    })\n  \n}\n\n  function handleAddPaymentData(item) {\n   \n    Service.send({\n      method: 'POST', path: 'WalletBalanceUnit/insert', data: item, query: null\n    }).then(res => {\n      if (res) {\n        const { statusCode, message } = res\n        if (statusCode === 200) {\n          toast.success( 'Action successful!')\n          getData(paramsFilter)\n        } else {\n          toast.warn(message || 'Đã có lỗi xảy ra!')\n        }\n      }\n    })\n  \n}\n\n  const getDataSearch = _.debounce((params) => {\n    getData(params, true)\n  }, 2000);\n\n  // ** Get data on mount\n  useEffect(() => {\n    getData(paramsFilter)\n  }, [])\n\n  const handleFilter = e => {\n    const { value } = e.target\n    setSearchValue(value)\n    const newParams = {\n      ...paramsFilter,  \n      searchText: value,\n      skip: 0\n    }\n    getDataSearch(newParams)\n\n  }\n  // ** Function to handle Pagination and get data\n  const handlePagination = page => {\n\n    const newParams = {\n      ...paramsFilter,\n      skip: (page.selected) * paramsFilter.limit\n    }\n    getData(newParams)\n    setCurrentPage(page.selected + 1)\n\n  }\n\n  // ** Function to handle per page\n  const handlePerPage = e => {\n\n    const newParams = {\n      ...paramsFilter,\n      limit: parseInt(e.target.value),\n      skip: 0\n    }\n    getData(newParams)\n    setCurrentPage(1)\n    setRowsPerPage(parseInt(e.target.value))\n  }\n\n\n  const handleChangeSearchField = (filed) => {\n    const newParams = {\n      ...paramsFilter,\n      skip: 0,\n    }\n    List_Search_Filter.forEach(item => {\n      delete newParams.filter[item.value]\n    })\n    newParams.filter[filed.value] = ''\n    setSearchValue('')\n    setSearchField(filed)\n    getData(newParams)\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(total / rowsPerPage).toFixed(0))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        breakLabel='...'\n        pageCount={count || 1}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={2}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        breakClassName='page-item'\n        breakLinkClassName='page-link'\n        containerClassName={\n          'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n        }\n      />\n    )\n  }\n\n  const toggleDropDown = () => {\n    setDropdownOpen(!dropdownOpen)\n  }\n\n  const handleOnchange = (name, value) => {\n    setUserData(\n      {\n        ...userData,\n        [name]: value\n      }\n    )\n  }\n\n  return (\n    <Fragment>\n      <Card>\n\n        <Row className='mx-0 mt-1 mb-50'>\n          \n          <Col className='d-flex align-items-center justify-content-sm-end mt-sm-0 mt-1' sm='3'>\n            <Label className='mr-1' for='search-input'>\n              Tìm\n            </Label>\n           \n\n              <Input\n                className='dataTable-filter'\n                type='text'\n                bsSize='lg'\n                id='search-input'\n                value={searchValue}\n                onChange={(e) => { handleFilter(e) }}\n              />\n       \n\n          </Col>\n      \n          <Col sm=\"2\">\n            <Button.Ripple color='primary'\n              size=\"lg\"\n              onClick={() => {\n                setModal(true);\n                 setUserData({\n                  \n                })\n              }}>\n              Thêm\n            </Button.Ripple>\n          </Col>\n          \n          <Col sm='7'>\n           \n           </Col>\n        \n        </Row>\n        <DataTable\n          noHeader\n          pagination\n          paginationServer\n          className='react-dataTable'\n          columns={serverSideColumns}\n          sortIcon={<ChevronDown size={10} />}\n          paginationComponent={CustomPagination}\n          data={items}\n          progressPending={isLoading}\n        />\n      </Card>\n\n      <Modal\n        isOpen={modal}\n        toggle={() => setModal(false)}\n        className={`modal-dialog-centered `}\n\n      >\n        <ModalHeader toggle={() => setModal(false)}>\n          {userData.walletBalanceUnitId ? \"Sửa\" : \"Thêm\"} Coin\n          </ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit((data) => {\n            const newData = data\n            if(userData.walletBalanceUnitAvatar ){\n              newData.walletBalanceUnitAvatar = userData.walletBalanceUnitAvatar\n            }\n            if(userData.walletBalanceUnitId){\n              handleUpdateData({\n                id: userData.walletBalanceUnitId,\n                data: newData\n              })\n            }else{\n              handleAddPaymentData(newData)\n            }\n            \n            setModal(false)\n          })}>\n          \n            <FormGroup>\n              <Label for='walletBalanceUnitDisplayName'>Tên coin</Label>\n              <Input\n                id='walletBalanceUnitDisplayName'\n                name='walletBalanceUnitDisplayName'\n                innerRef={register({ required: true })}\n                invalid={errors.walletBalanceUnitDisplayName && true}\n                placeholder='Tên coin'\n                value={userData.walletBalanceUnitDisplayName || ''}\n                onChange={(e) => {\n                  const { name, value } = e.target\n                  handleOnchange(name, value)\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for='walletBalanceUnitCode'>Mã coin</Label>\n              <Input\n                id='walletBalanceUnitCode'\n                name='walletBalanceUnitCode'\n                innerRef={register({ required: true })}\n                invalid={errors.walletBalanceUnitCode && true}\n                placeholder='BTC'\n                value={userData.walletBalanceUnitCode || ''}\n                onChange={(e) => {\n                  const { name, value } = e.target\n                  handleOnchange(name, value)\n                }}\n              />\n            </FormGroup>\n            {/* <FormGroup>\n              <Label for='originalPrice'>Giá góc</Label>\n              <Input\n                id='originalPrice'\n                name='originalPrice'\n                innerRef={register({ required: true })}\n                invalid={errors.originalPrice && true}\n                placeholder='Giá góc'\n                value={userData.originalPrice || ''}\n                onChange={(e) => {\n                  const { name, value } = e.target\n                  handleOnchange(name, value)\n                }}\n              />\n            </FormGroup> */}\n            {/* <FormGroup>\n              <Label for='agencySellPrice'>Giá đại lý bán</Label>\n              <Input\n                name='agencySellPrice'\n                id='agencySellPrice'\n                innerRef={register({ required: true })}\n                invalid={errors.agencySellPrice && true}\n                value={userData.agencySellPrice || \"\"}\n                placeholder='Giá đại lý bán'\n                onChange={(e) => {\n                  const { name, value } = e.target\n                  handleOnchange(name, value)\n                }}\n              />\n            </FormGroup> */}\n            <FormGroup>\n              <Label for='userSellPrice'>Giá người dùng bán\t</Label>\n              <Input\n                name='userSellPrice'\n                id='userSellPrice'\n                innerRef={register({ required: true })}\n                invalid={errors.userSellPrice && true}\n                value={userData.userSellPrice || \"\"}\n                placeholder='Giá người dùng bán\t'\n                onChange={(e) => {\n                  const { name, value } = e.target\n                  handleOnchange(name, value)\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for='avatar'>Ảnh\t</Label>\n              <FileUploaderBasic  setPreviewArr={(arrayItem)=>{\n                \n                uploadMediaFile({\n                  imageData: arrayItem[0].booksImageUrl.replace(\"data:image/png;base64\", \"\"),\n                  imageFormat: \"png\"\n                })\n              }} previewArr={userData.walletBalanceUnitAvatar  && userData.walletBalanceUnitAvatar !==\"\" ? [ {booksImageUrl: userData.walletBalanceUnitAvatar }] : []} />\n            </FormGroup>\n            <FormGroup className='d-flex mb-0'>\n              <Button.Ripple className='mr-1' color='primary' type='submit'>\n                Lưu\n            </Button.Ripple>\n\n            </FormGroup>\n          </Form>\n        </ModalBody>\n\n      </Modal>\n\n    </Fragment >\n  )\n}\n\nexport default memo(CoinTableServerSide)\n"],"sourceRoot":""}