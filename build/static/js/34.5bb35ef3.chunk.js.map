{"version":3,"sources":["views/pages/report-factory/packageOwnerUser/index.js","services/factoryReportService.js","views/pages/report-factory/factoryReport/index.js","views/pages/report-factory/index.js","services/payPackageService.js","services/userService.js","views/pages/manager-transaction/detailModal.js","@core/components/widgets/stats/StatsWithAreaChart.js","@core/components/widgets/stats/ChartOptions.js","views/ui-elements/cards/statistics/SubscribersGained.js"],"names":["DefaultFilter","filter","skip","limit","PackageOwnerUser","intl","active","useState","paramsFilter","setParamsFilter","packageOwnerData","setPackageOwnerData","total","setTotal","loading","setLoading","search","setSearch","idData","setIdData","sidebarDetailOpen","setSidebarDetailOpen","toggleDetailOpen","getData","params","newParams","Object","keys","forEach","key","PaymentPackageService","countAllUserPackage","then","result","length","catch","err","toast","warn","formatMessage","id","action","finally","useEffect","getDataSearch","PackageOwnerHistoryColumn","name","selector","width","cell","row","appUserId","className","onClick","event","preventDefault","UserService","findDetailUserById","data","error","UncontrolledTooltip","placement","target","maxWidth","minWidth","Card","Row","Col","sm","lg","Input","value","onChange","e","onKeyDown","searchText","handleFilter","placeholder","noHeader","pagination","paginationServer","highlightOnHover","persistTableHead","noDataComponent","columns","paginationComponent","count","Number","Math","ceil","toFixed","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","sortIcon","size","open","toggleSidebar","arrData","injectIntl","memo","FactoryReportService","Promise","resolve","reject","Request","send","method","path","statusCode","message","context","useContext","ThemeColors","items","setItems","summaryServicePackageReport","SubscribersGained","totalNewPaymentServicePackByDate","title","icon","kFormatter","warning","colors","primary","main","totalNewPaymentServicePackByWeek","color","success","totalNewPaymentServicePackByMonth","info","totalNewPaymentServicePackByYear","dark","totalPaymentServicePack","secondary","totalPaymentServicePack100","totalPaymentServicePack500","totalPaymentServicePack1000","CardBody","Label","totalProfitClaimed","totalProfitActual","React","activeTab","setActiveTab","toggle","tab","Nav","tabs","NavItem","NavLink","TabContent","TabPane","tabId","Error","paymentServicePackageId","isOpen","firstName","tag","username","lastName","email","phoneNumber","createdAt","moment","utc","format","sotaikhoan","tentaikhoan","tennganhang","StatsWithAreaChart","props","stats","statTitle","series","options","type","height","rest","classnames","defaultProps","chart","toolbar","show","sparkline","enabled","grid","dataLabels","stroke","curve","fill","gradient","shadeIntensity","opacityFrom","opacityTo","stops","xaxis","labels","axisBorder","yaxis","tooltip","x","dataChart","setDataChart","axios","get","res"],"mappings":"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","file":"static/js/34.5bb35ef3.chunk.js","sourcesContent":["import React, { memo, useState, useEffect, Fragment } from \"react\";\nimport { Card, Col, Input, Row, UncontrolledTooltip } from \"reactstrap\";\n//icon\nimport { ChevronDown } from \"react-feather\";\n\n//translate\nimport { injectIntl } from \"react-intl\";\n\n//services\nimport { toast } from \"react-toastify\";\nimport ReactPaginate from \"react-paginate\";\nimport DataTable from \"react-data-table-component\";\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\nimport UserService from \"../../../../services/userService\";\nimport PaymentPackageService from \"../../../../services/payPackageService\";\nimport DetailModal from \"../../manager-transaction/detailModal\";\n\nconst DefaultFilter = {\n  filter: {},\n  skip: 0,\n  limit: 20,\n};\nfunction PackageOwnerUser({ intl, active }) {\n  const [paramsFilter, setParamsFilter] = useState(DefaultFilter);\n  const [packageOwnerData, setPackageOwnerData] = useState([]);\n  const [total, setTotal] = useState(20);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [idData, setIdData] = useState([]);\n  const [sidebarDetailOpen, setSidebarDetailOpen] = useState(false);\n  const toggleDetailOpen = () => {\n    setSidebarDetailOpen(!sidebarDetailOpen);\n  };\n\n  function getData(params) {\n    if (loading) {\n      return;\n    }\n    setLoading(true);\n    const newParams = {\n      ...params,\n    };\n    Object.keys(newParams.filter).forEach((key) => {\n      if (!newParams.filter[key] || newParams.filter[key] === \"\") {\n        delete newParams.filter[key];\n      }\n    });\n    PaymentPackageService.countAllUserPackage(newParams)\n      .then((result) => {\n        setTotal(result.length);\n        setPackageOwnerData(result);\n      })\n      .catch((err) => {\n        toast.warn(\n          intl.formatMessage(\n            { id: \"actionFailed\" },\n            { action: intl.formatMessage({ id: \"update\" }, err) }\n          )\n        );\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }\n\n  useEffect(() => {\n    getData(paramsFilter);\n  }, [active]);\n\n  const handlePagination = (page) => {\n    const newParams = {\n      ...paramsFilter,\n      skip: page.selected * paramsFilter.limit,\n    };\n    getData(newParams);\n    setParamsFilter(newParams);\n  };\n\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(total / paramsFilter.limit).toFixed(0));\n    return (\n      <ReactPaginate\n        previousLabel={\"\"}\n        nextLabel={\"\"}\n        breakLabel=\"...\"\n        pageCount={count || 1}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={2}\n        activeClassName=\"active\"\n        forcePage={paramsFilter.skip / paramsFilter.limit}\n        onPageChange={(page) => handlePagination(page)}\n        pageClassName={\"page-item\"}\n        nextLinkClassName={\"page-link\"}\n        nextClassName={\"page-item next\"}\n        previousClassName={\"page-item prev\"}\n        previousLinkClassName={\"page-link\"}\n        pageLinkClassName={\"page-link\"}\n        breakClassName=\"page-item\"\n        breakLinkClassName=\"page-link\"\n        containerClassName={\n          \"pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1\"\n        }\n      />\n    );\n  };\n\n  const getDataSearch = (params) => {\n    getData(params);\n  };\n  const handleFilter = (e) => {\n    const { value } = e.target;\n    if (value === \"\") {\n      getDataSearch(DefaultFilter);\n      setParamsFilter(DefaultFilter);\n    } else {\n      let newParams = {\n        ...paramsFilter,\n        searchText: value,\n        skip: 0,\n      };\n      setParamsFilter(newParams);\n      getDataSearch(newParams);\n    }\n  };\n  const onKeydown = (e) => {\n    if (e.key === \"Enter\") {\n      handleFilter(e);\n    }\n  };\n  const onChangeSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const PackageOwnerHistoryColumn = [\n    {\n      name: intl.formatMessage({ id: \"id\" }),\n      selector: \"appUserId\",\n      width: \"90px\",\n      cell: (row) => {\n        const { appUserId } = row;\n        return (\n          <>\n            <span\n              className=\"text-dark cursor-pointer\"\n              id=\"detailUser\"\n              onClick={(event) => {\n                event.preventDefault();\n                UserService.findDetailUserById(appUserId)\n                  .then((data) => {\n                    setIdData(data);\n                    toggleDetailOpen();\n                  })\n                  .catch(() => {\n                    toast.error(\n                      intl.formatMessage({ id: \"an_error_occurred\" }) +\n                        \" \" +\n                        intl.formatMessage({ id: \"please_come_back_late\" })\n                    );\n                  });\n              }}\n            >\n              {row.appUserId}\n            </span>\n            <UncontrolledTooltip placement=\"right\" target={\"detailUser\"}>\n              {intl.formatMessage({ id: \"click_to_see_detail\" })}\n            </UncontrolledTooltip>\n          </>\n        );\n      },  \n    },\n    {\n      name: intl.formatMessage({ id: \"package_owner\" }),\n      selector: \"totalPackageCount\",\n      maxWidth: \"300px\",\n    },\n    {\n      name: intl.formatMessage({ id: \"account\" }),\n      selector: \"username\",\n      minWidth: \"200px\",\n    },\n    {\n      name: intl.formatMessage({ id: \"fullname\" }),\n      selector: \"firstName\",\n      minWidth: \"200px\",\n    },\n    {\n      name: intl.formatMessage({ id: \"email\" }),\n      selector: \"email\",\n      minWidth: \"200px\",\n    },\n    {\n      name: intl.formatMessage({ id: \"phoneNumber\" }),\n      selector: \"phoneNumber\",\n      maxWidth: \"200px\",\n    },\n    {\n      name: intl.formatMessage({ id: \"memberLevelName\" }),\n      selector: \"memberLevelName\",\n      maxWidth: \"120px\",\n    },\n  ];\n\n  return (\n    <Fragment>\n      <Card className=\"p-1\">\n      <Row>\n          <Col sm={12} lg={8} />\n          <Col className=\"mb-1\" sm={12} lg={4}>\n            <Input\n              value={search}\n              onChange={onChangeSearch}\n              onKeyDown={onKeydown}\n              placeholder={intl.formatMessage({ id: \"search\" })}\n            />\n          </Col>\n        </Row>\n        <DataTable\n          noHeader\n          pagination\n          paginationServer\n          highlightOnHover\n          persistTableHead\n          noDataComponent={<span className=\"mt-2\">{intl.formatMessage({ id: \"table_empty\" })}</span>}\n          className=\"react-dataTable\"\n          columns={PackageOwnerHistoryColumn}\n          paginationComponent={CustomPagination}\n          sortIcon={<ChevronDown size={10} />}\n          data={packageOwnerData}\n        />\n      </Card>\n      <DetailModal open={sidebarDetailOpen} toggleSidebar={toggleDetailOpen} arrData={idData}/>\n    </Fragment>\n  );\n}\n\nexport default injectIntl(memo(PackageOwnerUser));\n","import Request from './request'\n\nexport default class FactoryReportService {\n  static async summaryServicePackageReport (params) {\n    return new Promise((resolve, reject) => { \n      Request.send({\n        method: \"POST\",\n        path: \"/Statistical/summaryServicePackageReport\",\n        data: params\n      }).then(result =>{ \n        const { statusCode, data,message} = result\n        if(statusCode === 200) {\n          resolve(data)\n        } else {\n          reject(message)\n        }\n      })\n    })\n  }\n}","// @ts-nocheck\nimport { useContext, useState, useEffect } from \"react\";\nimport { kFormatter } from \"@utils\";\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\";\nimport { Row, Col, Label, CardBody, Card } from \"reactstrap\";\nimport { toast } from \"react-toastify\";\nimport { ShoppingBag, Cpu, LifeBuoy } from \"react-feather\";\nimport SubscribersGained from \"@src/views/ui-elements/cards/statistics/SubscribersGained\";\nimport \"./index.scss\";\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\";\nimport \"@styles/react/libs/charts/apex-charts.scss\";\nimport { injectIntl } from \"react-intl\";\nimport FactoryReportService from \"../../../../services/factoryReportService\";\n\nconst FactoryReport = ({ intl }) => {\n  const DefaultFilter = {};\n  const [paramsFilter, setParamsFilter] = useState(DefaultFilter);\n  const context = useContext(ThemeColors);\n  const [items, setItems] = useState({});\n\n  function getData(params) {\n    const newParams = {\n      ...params,\n    };\n    FactoryReportService.summaryServicePackageReport(newParams)\n      .then((result) => {\n        setItems(result);\n      })\n      .catch(() => {\n        toast.warn(intl.formatMessage({ id: \"an_error_occurred\" }));\n      });\n  }\n\n  useEffect(() => {\n    getData(paramsFilter);\n  }, []);\n\n  return (\n    <div id=\"dashboard-analytics\" className=\"p-1\">\n    \n      <Row className=\"match-height dashboard\">\n        <Col lg=\"3\" sm=\"6\">\n          <SubscribersGained\n            data={items.totalNewPaymentServicePackByDate || 0}\n            title={intl.formatMessage({ id: \"sum_payment_daily\" })}\n            icon={<Cpu size={21} />}\n            kFormatter={kFormatter}\n            warning={context.colors.primary.main}\n          />\n        </Col>\n        <Col lg=\"3\" sm=\"6\">\n          <SubscribersGained\n            data={items.totalNewPaymentServicePackByWeek || 0}\n            color={\"success\"}\n            title={intl.formatMessage({ id: \"sum_payment_week\" })}\n            icon={<Cpu size={21} />}\n            kFormatter={kFormatter}\n            warning={context.colors.success.main}\n          />\n        </Col>\n\n        <Col lg=\"3\" sm=\"6\">\n          <SubscribersGained\n            data={items.totalNewPaymentServicePackByMonth || 0}\n            color={\"warning\"}\n            title={intl.formatMessage({ id: \"sum_payment_month\" })}\n            warning={context.colors.info.main}\n            icon={<Cpu size={21} />}\n            kFormatter={kFormatter}\n          />\n        </Col>\n        <Col lg=\"3\" sm=\"6\">\n          <SubscribersGained\n            data={items.totalNewPaymentServicePackByYear || 0}\n            color={\"light\"}\n            title={intl.formatMessage({ id: \"sum_payment_year\" })}\n            icon={<Cpu size={21} />}\n            kFormatter={kFormatter}\n            warning={context.colors.dark.main}\n          />\n        </Col>\n      </Row>\n\n      <Row className=\"match-height dashboard\">\n        <Col lg=\"3\" sm=\"6\">\n          <SubscribersGained\n            data={items.totalPaymentServicePack || 0}\n            title={intl.formatMessage({ id: \"sum_payment_all\" })}\n            icon={<ShoppingBag size={21} />}\n            kFormatter={kFormatter}\n            warning={context.colors.secondary.main}\n          />\n        </Col>\n        <Col lg=\"3\" sm=\"6\">\n          <SubscribersGained\n            data={items.totalPaymentServicePack100 || 0}\n            color={\"success\"}\n            title={intl.formatMessage({ id: \"sum_payment_100\" })}\n            icon={<ShoppingBag size={21} />}\n            kFormatter={kFormatter}\n            warning={context.colors.info.main}\n          />\n        </Col>\n\n        <Col lg=\"3\" sm=\"6\">\n          <SubscribersGained\n            data={items.totalPaymentServicePack500 || 0}\n            color={\"warning\"}\n            title={intl.formatMessage({ id: \"sum_payment_500\" })}\n            warning={context.colors.warning.main}\n            icon={<ShoppingBag size={21} />}\n            kFormatter={kFormatter}\n          />\n        </Col>\n        <Col lg=\"3\" sm=\"6\">\n          <SubscribersGained\n            data={items.totalPaymentServicePack1000 || 0}\n            color={\"light\"}\n            title={intl.formatMessage({ id: \"sum_payment_1000\" })}\n            icon={<ShoppingBag size={21} />}\n            kFormatter={kFormatter}\n            warning={context.colors.primary.main}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col lg=\"12\" sm=\"12\" className=\"d-flex\">\n          <Card>\n            <CardBody>\n            <span className=\"mr-2\"> \n                <LifeBuoy size=\"25\" className=\"text-warning\"/>\n            </span>\n              <Label>{intl.formatMessage({ id: \"sum_FAC_dig\" })} :   </Label>\n              <Label className=\"ml-2\">\n                {items.totalProfitClaimed + items.totalProfitActual}\n              </Label>\n              <Label className=\"ml-1\">{intl.formatMessage({ id: \"FAC\" })}</Label>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default injectIntl(FactoryReport);\n","import React, { Fragment } from \"react\";\nimport {\n  Card,\n  CardBody,\n  Col,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  TabContent,\n  TabPane,\n} from \"reactstrap\";\nimport { injectIntl } from \"react-intl\";\nimport { List } from \"react-feather\";\nimport PackageOwnerUser from \"./packageOwnerUser\";\nimport FactoryReport from \"./factoryReport\";\n\n\nfunction ReportFactory({ intl }) {\n  \n  const [activeTab, setActiveTab] = React.useState(\"1\");\n\n  const toggle = (tab) => {\n    setActiveTab(tab);\n  };\n\n  return (\n    <Fragment>\n      <Row>\n        <Col sm=\"12\">\n            <div className=\"p-1\">\n              <Nav tabs>\n              <NavItem>\n                  <NavLink\n                    active={activeTab === \"1\"}\n                    onClick={() => toggle(\"1\")}\n                  >\n                    <List size={14} />\n                    <span className=\"align-middle d-none d-sm-block\">\n                      {intl.formatMessage({ id: \"report-factory\" })}\n                    </span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    active={activeTab === \"2\"}\n                    onClick={() => toggle(\"2\")}\n                  >\n                    <List size={14} />\n                    <span className=\"align-middle d-none d-sm-block\">\n                      {intl.formatMessage({ id: \"package_user\" })}\n                    </span>\n                  </NavLink>\n                </NavItem>\n              </Nav>\n              <TabContent activeTab={activeTab}>\n              <TabPane tabId=\"1\">\n                    <FactoryReport active={activeTab === \"2\"}/>\n                  </TabPane>\n                  <TabPane tabId=\"2\">\n                    <PackageOwnerUser active={activeTab === \"1\"}/>\n                  </TabPane>\n              </TabContent>\n            </div>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n}\n\nexport default injectIntl(ReportFactory);\n","import Request from \"./request\";\nexport default class PaymentPackageService {\n  static async findPaymentPackage(data = {}) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/find\",\n        data: data,\n      }).then((result) => {\n        const { statusCode, data, error } = result;\n        if (statusCode === 200) {\n          resolve(data);\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  static async findUserBuyPackage(data = {}) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/findUserBuyPackage\",\n        data: data,\n      }).then((result) => {\n        const { statusCode, data, error } = result;\n        if (statusCode === 200) {\n          resolve(data);\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  static async findById(paymentServicePackageId) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/findById\",\n        data: {\n          id: paymentServicePackageId\n        },\n      }).then((result) => {\n        const {statusCode, error} =result;\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      })\n    })\n  }\n\n  static async completePackageUser(params) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/adminCompletePackagesById\",\n        data: params\n      }).then((result) => {\n        const {statusCode, error} =result;\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      })\n    })\n  }\n\n  static async insertPaymentPackage(params) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/insert\",\n        data: params,\n      }).then((result) => {\n        const {statusCode, error} =result;\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      })\n    })\n  }\n\n  static async updateById(params){\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/updateById\",\n        data: params, \n      }).then((result) => {\n        const { statusCode, error } = result;\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    })\n  }\n\n  static async activePackagesList(paymentServicePackageId){\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/activatePackagesByIdList\",\n        data: {\n          \"idList\": [\n            paymentServicePackageId\n          ]\n        }, \n      }).then((result) => {\n        const { statusCode, error } = result;\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    })\n  }\n\n  static async deactivatePackagesByIdList(paymentServicePackageId){\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/deactivatePackagesByIdList\",\n        data: {\n          \"idList\": [\n            paymentServicePackageId\n          ]\n        },\n      }).then((result) => {\n        const { statusCode, error } = result;\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    })\n  }\n\n  static async rewardProfit(params){\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/rewardProfitBonusForUser\",\n        data: params, \n      }).then((result) => {\n        const { statusCode, error } = result;\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    })\n  }\n\n  static async deleteById(params){\n    return new Promise ((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/deleteById\",\n        data: params\n      }).then((result = {}) => {\n        const { statusCode, error } = result\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      })\n    })\n  }\n\n  static async countAllUserPackage(data = {}) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/countAllUserPackage\",\n        data: data,\n      }).then((result) => {\n        const { statusCode, data, error } = result;\n        if (statusCode === 200) {\n          resolve(data);\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  static async historyCancelServicePackage(data = {}) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/admin/historyCancelServicePackage\",\n        data: data,\n      }).then((result) => {\n        const { statusCode, data, error } = result;\n        if (statusCode === 200) {\n          resolve(data);\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  static async historyCompleteServicePackage(data = {}) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/admin/historyCompleteServicePackage\",\n        data: data,\n      }).then((result) => {\n        const { statusCode, data, error } = result;\n        if (statusCode === 200) {\n          resolve(data);\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  static async updateChangeComplete(params){\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/admin/updateById\",\n        data: params, \n      }).then((result) => {\n        const { statusCode, error } = result;\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    })\n  }\n}\n","import Request from \"./request\";\n\nexport default class UserService {\n  static async getUser(params = {}) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/AppUsers/find\",\n        data: params,\n      }).then((result) => {\n        const { statusCode, data, error } = result;\n        if (statusCode === 200) {\n          resolve(data);\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  static async findDetailUserById(id) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/AppUsers/findById\",\n        data: {\n          id: id,\n        },\n      }).then((result = {}) => {\n        const { statusCode, data, message } = result;\n        if (statusCode === 200) {\n          return resolve(data);\n        } else {\n          return reject(message);\n        }\n      });\n    });\n  }\n\n  static async updateUserById(params) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/AppUsers/updateUserById\",\n        data: params,\n      }).then((result) => {\n        const { statusCode, error } = result;\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  static async verifyInfoUser(params) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/AppUsers/verifyInfoUser\",\n        data: params,\n      }).then((result) => {\n        const { statusCode, error } = result;\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  static async rejectInfoUser(params) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/AppUsers/rejectInfoUser\",\n        data: params,\n      }).then((result) => {\n        const { statusCode, error } = result;\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  static async uploadAvatar(params) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/AppUsers/uploadAvatar\",\n        data: params,\n      }).then((result) => {\n        const { statusCode, data, error } = result;\n        if (statusCode === 200) {\n          return resolve(data);\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  static async exportExcel(params) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/AppUsers/exportExcel\",\n        data: params,\n      }).then((result) => {\n        const { statusCode, data, error } = result;\n        if (statusCode === 200) {\n          resolve(data);\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  static async adminChangePasswordUser(params) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/AppUsers/adminChangePasswordUser\",\n        data: params,\n      }).then((result) => {\n        const { statusCode, data, error } = result;\n        if (statusCode === 200) {\n          resolve(data);\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  static async adminChangeSecondaryPasswordUser(params) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/AppUsers/adminChangeSecondaryPasswordUser\",\n        data: params,\n      }).then((result) => {\n        const { statusCode, data, error } = result;\n        if (statusCode === 200) {\n          resolve(data);\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  static async findAllUsersFollowingReferId(params = {}) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/AppUsers/findAllUsersFollowingReferId\",\n        data: params,\n      }).then((result) => {\n        const { statusCode, data, error } = result;\n        if (statusCode === 200) {\n          resolve(data);\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  static async getListReferralByUserId(params = {}) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/admin/getListReferralByUserId\",\n        data: params,\n      }).then((result) => {\n        const { statusCode, data, error } = result;\n        if (statusCode === 200) {\n          resolve(data);\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n}\n","import React from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  CardText,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport { injectIntl } from \"react-intl\";\nimport {\n  Calendar,\n  Phone,\n  Star,\n  User,\n  Trello,\n  TrendingUp,\n  Type,\n} from \"react-feather\";\nimport moment from \"moment\";\n\nconst DetailModal = ({ intl, open, toggleSidebar, arrData }) => {\n  return (\n    <Modal\n      isOpen={open}\n      toggle={toggleSidebar}\n      className={`modal-dialog-centered `}\n    >\n      <ModalHeader toggle={toggleSidebar}>\n        {intl.formatMessage({ id: \"detail_user\" })} {arrData.firstName}\n      </ModalHeader>\n      <ModalBody>\n        <div className=\"my-1\">\n          <Row className=\"mx-auto mb-1\">\n            <Col sm=\"5\">\n              <User className=\"mr-1\" size={14} />\n              <CardText tag=\"span\" className=\"font-weight-bold\">\n                {intl.formatMessage({ id: \"username\" })}:\n              </CardText>\n            </Col>\n            <Col sm=\"7\">\n              <CardText>\n                {arrData.username === null ? \"\" : arrData.username}\n              </CardText>\n            </Col>\n          </Row>\n          <Row className=\"mx-auto mb-1\">\n            <Col sm=\"5\">\n              <Star className=\"mr-1\" size={14} />\n              <CardText tag=\"span\" className=\"font-weight-bold\">\n                {intl.formatMessage({ id: \"fullname\" })}:\n              </CardText>\n            </Col>\n            <Col sm=\"7\">\n              <CardText>\n                {arrData.firstName === null ? \"\" : arrData.firstName}{\" \"}\n                {arrData.lastName === null ? \"\" : arrData.lastName}\n              </CardText>\n            </Col>\n          </Row>\n\n          <Row className=\"mx-auto mb-1\">\n            <Col sm=\"5\">\n              <User className=\"mr-1\" size={14} />\n              <CardText tag=\"span\" className=\"font-weight-bold\">\n                {intl.formatMessage({ id: \"Email\" })}:\n              </CardText>\n            </Col>\n            <Col sm=\"7\">\n              <CardText>{arrData.email === null ? \"\" : arrData.email}</CardText>\n            </Col>\n          </Row>\n\n          <Row className=\"mx-auto mb-1\">\n            <Col sm=\"5\">\n              <Phone className=\"mr-1\" size={14} />\n              <CardText tag=\"span\" className=\"font-weight-bold\">\n                {intl.formatMessage({ id: \"phoneNumber\" })}:\n              </CardText>\n            </Col>\n            <Col sm=\"7\">\n              <CardText>\n                {arrData.phoneNumber === null ? \"\" : arrData.phoneNumber}\n              </CardText>\n            </Col>\n          </Row>\n          <Row className=\"mx-auto mb-1\">\n            <Col sm=\"5\">\n              <Calendar className=\"mr-1\" size={14} />\n              <CardText tag=\"span\" className=\"font-weight-bold\">\n                {intl.formatMessage({ id: \"createdAt\" })}:\n              </CardText>\n            </Col>\n            <Col sm=\"7\">\n              <CardText>\n                {arrData.createdAt === null\n                  ? \"\"\n                  : moment\n                      .utc(moment(arrData.createdAt))\n                      .format(\"HH:mm DD/MM/YYYY\")}\n              </CardText>\n            </Col>\n          </Row>\n          <Row className=\"mx-auto mb-1\">\n            <Col sm=\"5\">\n              <Trello className=\"mr-1\" size={14} />\n              <CardText tag=\"span\" className=\"font-weight-bold\">\n                {intl.formatMessage({ id: \"identity_number\" })}:\n              </CardText>\n            </Col>\n            <Col sm=\"7\">\n              <CardText>\n                {arrData.sotaikhoan === null ? \"\" : arrData.sotaikhoan}\n              </CardText>\n            </Col>\n          </Row>\n          <Row className=\"mx-auto mb-1\">\n            <Col sm=\"5\">\n              <Type className=\"mr-1\" size={14} />\n              <CardText tag=\"span\" className=\"font-weight-bold\">\n                {intl.formatMessage({ id: \"name_bank\" })}:\n              </CardText>\n            </Col>\n            <Col sm=\"7\">\n              <CardText>\n                {arrData.tentaikhoan === null ? \"\" : arrData.tentaikhoan}\n              </CardText>\n            </Col>\n          </Row>\n          <Row className=\"mx-auto mb-1\">\n            <Col sm=\"5\">\n              <TrendingUp className=\"mr-1\" size={14} />\n              <CardText tag=\"span\" className=\"font-weight-bold\">\n                {intl.formatMessage({ id: \"bank\" })}:\n              </CardText>\n            </Col>\n            <Col sm=\"7\">\n              <CardText>\n                {arrData.tennganhang === null ? \"\" : arrData.tennganhang}\n              </CardText>\n            </Col>\n          </Row>\n        </div>\n      </ModalBody>\n    </Modal>\n  );\n};\n\nexport default injectIntl(DetailModal);\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport Chart from 'react-apexcharts'\nimport { Card, CardBody } from 'reactstrap'\n\n// ** Default Options\nimport { areaChartOptions } from './ChartOptions'\n\nconst StatsWithAreaChart = props => {\n  // ** Props\n  const { icon, color, stats, statTitle, series, options, type, height, className, ...rest } = props\n  return (\n    <Card {...rest}>\n      <CardBody\n        className={classnames('pb-0', {\n          [className]: className\n        })}\n      >\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${color}`} icon={icon} />\n        <h2 className='font-weight-bolder mt-1'>{stats}</h2>\n        <p className='card-text'>{statTitle}</p>\n      </CardBody>\n      <Chart options={options} series={series} type={type} height={height ? height : 100} />\n    </Card>\n  )\n}\n\nexport default StatsWithAreaChart\n\n// ** PropTypes\nStatsWithAreaChart.propTypes = {\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired,\n  options: PropTypes.object,\n  series: PropTypes.array.isRequired,\n  type: PropTypes.string,\n  height: PropTypes.string,\n  className: PropTypes.string\n}\n\n// ** Default Props\nStatsWithAreaChart.defaultProps = {\n  options: areaChartOptions,\n  color: 'primary'\n}\n","// ** Area Chart Common Options\nexport const areaChartOptions = {\n  chart: {\n    toolbar: {\n      show: false\n    },\n    sparkline: {\n      enabled: true\n    }\n  },\n  grid: {\n    show: false\n  },\n  colors: ['#7367F0'],\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'smooth',\n    width: 2.5\n  },\n  fill: {\n    type: 'gradient',\n    gradient: {\n      shadeIntensity: 0.9,\n      opacityFrom: 0.7,\n      opacityTo: 0.5,\n      stops: [0, 80, 100]\n    }\n  },\n  xaxis: {\n    labels: {\n      show: false\n    },\n    axisBorder: {\n      show: false\n    }\n  },\n  yaxis: {\n    labels: {\n      show: false\n    }\n  },\n  tooltip: {\n    x: { show: false }\n  }\n}\n\n// ** Line Chart Common Options\nexport const lineChartOptions = {\n  chart: {\n    toolbar: {\n      show: false\n    },\n    sparkline: {\n      enabled: true\n    },\n    dropShadow: {\n      enabled: true,\n      top: 5,\n      left: 0,\n      blur: 4,\n      opacity: 0.1\n    }\n  },\n  grid: {\n    show: false\n  },\n  colors: ['#7367F0'],\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'smooth',\n    width: 5\n  },\n  fill: {\n    type: 'gradient',\n    gradient: {\n      shadeIntensity: 1,\n      gradientToColors: ['#A9A2F6'],\n      opacityFrom: 1,\n      opacityTo: 1,\n      stops: [0, 100, 100, 100]\n    }\n  },\n\n  xaxis: {\n    labels: {\n      show: false\n    },\n    axisBorder: {\n      show: false\n    }\n  },\n  yaxis: {\n    labels: {\n      show: false\n    }\n  },\n  tooltip: {\n    x: { show: false }\n  }\n}\n","// @ts-nocheck\nimport { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Users } from 'react-feather'\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst SubscribersGained = ({ kFormatter, data, title = \"\", icon, color=\"primary\", warning }) => {\n  const [dataChart, setDataChart] = useState(null)\n  useEffect(() => {\n    axios.get('/card/card-statistics/subscribers').then(res => setDataChart(res.data))\n  }, [])\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [warning],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  return data !== null  && dataChart !==null? (\n    <StatsWithAreaChart\n      icon={icon ? icon :<Users size={21} />}\n      color={color}\n      stats={kFormatter(data)}\n      statTitle={title}\n      series={dataChart.series}\n      type='area'\n      options={options}\n    />\n  ) : null\n}\n\nexport default SubscribersGained\n"],"sourceRoot":""}