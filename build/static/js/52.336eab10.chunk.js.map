{"version":3,"sources":["views/pages/manager-notification/insertMessage.js","../node_modules/reactstrap/es/Col.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/Spinner.js","../node_modules/reactstrap/es/Media.js","services/customerMessageService.js"],"names":["injectIntl","intl","history","useHistory","useState","enteredType","setEnteredType","featuredImg","setFeaturedImg","imgPath","setImgPath","loading","setLoading","useForm","defaultValues","register","errors","handleSubmit","onClick","goBack","className","formatMessage","id","onSubmit","data","messageTitle","groupCustomerMessageTitle","messageContent","groupCustomerMessageContent","params","groupCustomerMessageType","length","toast","warn","groupCustomerMessageImage","CustomerMessageService","insertMessage","then","success","catch","finally","type","value","onChange","sm","src","alt","width","height","body","name","e","reader","FileReader","files","target","file","size","readAsDataURL","onload","result","imageData","replace","imageFormat","uploadImage","error","onerror","accept","innerRef","required","maxLength","invalid","placeholder","rows","color","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","order","offset","propTypes","tag","tagPropType","xs","md","lg","xl","cssModule","object","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Col","props","Tag","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","i","columnProp","isObject","_classNames","colSizeInterfix","colClass","push","mapToCssModules","classNames","_colClass","classes","React","createElement","_extends","inverse","outline","func","Card","ref","children","Spinner","role","bottom","node","heading","left","list","middle","right","top","Media","defaultTag","href","media","Promise","resolve","reject","Request","send","method","path","statusCode","Error","groupCustomerMessageId","message","customerMessageId"],"mappings":"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","file":"static/js/52.336eab10.chunk.js","sourcesContent":["import { Fragment, useState } from \"react\";\nimport {\n  Input,\n  Label,\n  Button,\n  Form,\n  Card,\n  FormGroup,\n  Col,\n  Media,\n  CustomInput,\n  Spinner,\n} from \"reactstrap\";\nimport { injectIntl } from \"react-intl\";\nimport { useHistory } from \"react-router\";\nimport CustomerMessageService from \"../../../services/customerMessageService\";\nimport { toast } from \"react-toastify\";\nimport { useForm } from \"react-hook-form\";\nimport { ChevronLeft } from \"react-feather\";\nimport \"../manager-user/style.scss\"\n\nconst InsertMessage = ({ intl }) => {\n  const history = useHistory();\n  const [enteredType, setEnteredType] = useState(\"GENERAL\");\n  const [featuredImg, setFeaturedImg] = useState(null);\n  const [imgPath, setImgPath] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const categoriesChangeHandler = (value) => {\n    setEnteredType(value);\n  };\n\n  const { register, errors, handleSubmit } = useForm({\n    defaultValues: {},\n  });\n\n  const onChange = (e) => {\n    const reader = new FileReader();\n    const files = e.target.files;\n    if (files.length == 0) {\n      return;\n    }\n    const file = files[0];\n    if (file.size > 10048576) {\n      toast.warn(intl.formatMessage({ id: \"required_image_size\" }));\n      return;\n    }\n    reader.readAsDataURL(files[0]);\n    reader.onload = function () {\n      setFeaturedImg(reader.result);\n      let baseString = reader.result;\n      const params = {\n        imageData: baseString.replace(\"data:\" + file.type + \";base64,\", \"\"),\n        imageFormat: file.type.replace(\"image/\", \"\"),\n      };\n      CustomerMessageService.uploadImage(params)\n        .then((result) => {\n          setImgPath(result);\n        })\n        .catch((error) => {\n          toast.error(intl.formatMessage({ id: \"an_error_occurred\" }));\n        })\n        .finally(() => {\n          e.target.value = \"\";\n        });\n    };\n    reader.onerror = function (error) {\n      toast.error(error, intl.formatMessage({ id: \"an_error_occurred\" }));\n    };\n  };\n\n  const submitHandler = (data) => {\n    if (loading) {\n      return;\n    }\n    setLoading(true);\n    const messageTitle = data.groupCustomerMessageTitle\n    const messageContent = data.groupCustomerMessageContent\n    const params = {\n      groupCustomerMessageType: enteredType,\n      groupCustomerMessageTitle: messageTitle,\n      groupCustomerMessageContent: messageContent,\n    };\n    if (messageTitle.length > 150) {\n      toast.warn(intl.formatMessage({ id: \"title_over_character\" }));\n      return setLoading(false)\n    }\n    if (messageContent.length > 1000) {\n      toast.warn(intl.formatMessage({ id: \"content_over_character\" }));\n      return setLoading(false)\n    }\n    if (imgPath) {\n      params.groupCustomerMessageImage = imgPath;\n    }\n    CustomerMessageService.insertMessage(params)\n      .then(() => {\n        history.goBack();\n        toast.success(intl.formatMessage({ id: \"add_notify_success\" }));\n      })\n      .catch(() => {\n        toast.success(intl.formatMessage({ id: \"add_notify_failed\" }));\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n\n    // CustomerMessageService.insertMessage(params)\n    //   .then(() => {\n    //     history.goBack();\n    //     toast.success(\n    //       intl.formatMessage({ id: \"add_notify_success\" })\n    //     );\n    //   })\n    //   .catch(() => {\n    //     toast.success(\n    //       intl.formatMessage({ id: \"add_notify_failed\" })\n    //     );\n    //   });\n  };\n\n  const onClickGoBack = () => {\n    history.goBack();\n  };\n\n  return (\n    <Fragment>\n      <div onClick={onClickGoBack} className=\"cursor-pointer mb-2\">\n        <ChevronLeft />\n        {intl.formatMessage({ id: \"Go-back\" })}\n      </div>\n      <Card className=\"col-lg-8\">\n        <h2 className=\"ml-2 my-2 mt-3\">\n          {intl.formatMessage({ id: \"add_notify\" })}\n        </h2>\n        <Form onSubmit={handleSubmit(submitHandler)}>\n          <FormGroup className=\"container\">\n            <Label>{intl.formatMessage({ id: \"type\" })}</Label>\n            <Input\n              type=\"select\"\n              value={enteredType}\n              onChange={categoriesChangeHandler}\n            >\n              <option value=\"GENERAL\">\n                {intl.formatMessage({ id: \"general\" })}\n              </option>\n            </Input>\n          </FormGroup>\n          <Col className=\"mb-2\" sm=\"12\">\n            <div className=\"border rounded p-2\">\n              <h4 className=\"mb-1\">{intl.formatMessage({ id: \"image\" })}</h4>\n              <Media className=\"flex-column flex-md-row\">\n                {featuredImg && (\n                  <img\n                    className=\"rounded mr-2 mb-1 mb-md-0\"\n                    src={featuredImg}\n                    alt={intl.formatMessage({ id: \"picture_new\" })}\n                    width=\"170\"\n                    height=\"110\"\n                  />\n                )}\n                <Media body>\n                  <small className=\"text-muted\">\n                    {intl.formatMessage({ id: \"required_image_size\" })}\n                  </small>\n                  <p className=\"my-100\"></p>\n                  <div className=\"d-inline-block\">\n                    <FormGroup className=\"mb-0\">\n                      <CustomInput\n                        type=\"file\"\n                        id=\"exampleCustomFileBrowser\"\n                        name=\"customFile\"\n                        onChange={onChange}\n                        accept=\".jpg, .png, .gif\"\n                      />\n                    </FormGroup>\n                  </div>\n                </Media>\n              </Media>\n            </div>\n          </Col>\n          <FormGroup className=\"container\">\n            <Label>{intl.formatMessage({ id: \"title\" }) + intl.formatMessage({ id: \"title_character\" })}</Label>\n            <Input\n              type=\"text\"\n              id=\"groupCustomerMessageTitle\"\n              name=\"groupCustomerMessageTitle\"\n              innerRef={register({ required: true, maxLength: 150 })}\n              invalid={errors.groupCustomerMessageTitle && true}\n              placeholder={intl.formatMessage({ id: \"input_title\" })}\n            />\n            {errors.groupCustomerMessageTitle && <span className=\"text-danger\">{intl.formatMessage({id:\"title_over_character\"})}</span>}\n          </FormGroup>\n          <FormGroup className=\"container\">\n            <Label>{intl.formatMessage({ id: \"content\" }) + intl.formatMessage({ id: \"content_character\" })}</Label>\n            <Input\n              type=\"textarea\"\n              rows=\"10\"\n              id=\"groupCustomerMessageContent\"\n              name=\"groupCustomerMessageContent\"\n              innerRef={register({ required: true, maxLength: 1000 })}\n              invalid={errors.groupCustomerMessageContent && true}\n              placeholder={intl.formatMessage({ id: \"input_content\" })}\n            />\n            {errors.groupCustomerMessageContent && <span className=\"text-danger\">{intl.formatMessage({id:\"content_over_character\"})}</span>}\n          </FormGroup>\n          \n          <div className=\"my-2 ml-1\">\n            <Button color=\"primary\" type=\"submit\">\n              {intl.formatMessage({ id: \"add\" })}\n              {loading && <Spinner className=\"ml-1\" color=\"white\" size=\"sm\" />}\n            </Button>\n          </div>\n        </Form>\n      </Card>\n    </Fragment>\n  );\n};\nexport default injectIntl(InsertMessage);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  body: PropTypes.bool,\n  bottom: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  heading: PropTypes.bool,\n  left: PropTypes.bool,\n  list: PropTypes.bool,\n  middle: PropTypes.bool,\n  object: PropTypes.bool,\n  right: PropTypes.bool,\n  tag: tagPropType,\n  top: PropTypes.bool\n};\n\nvar Media = function Media(props) {\n  var body = props.body,\n      bottom = props.bottom,\n      className = props.className,\n      cssModule = props.cssModule,\n      heading = props.heading,\n      left = props.left,\n      list = props.list,\n      middle = props.middle,\n      object = props.object,\n      right = props.right,\n      tag = props.tag,\n      top = props.top,\n      attributes = _objectWithoutPropertiesLoose(props, [\"body\", \"bottom\", \"className\", \"cssModule\", \"heading\", \"left\", \"list\", \"middle\", \"object\", \"right\", \"tag\", \"top\"]);\n\n  var defaultTag;\n\n  if (heading) {\n    defaultTag = 'h4';\n  } else if (attributes.href) {\n    defaultTag = 'a';\n  } else if (attributes.src || object) {\n    defaultTag = 'img';\n  } else if (list) {\n    defaultTag = 'ul';\n  } else {\n    defaultTag = 'div';\n  }\n\n  var Tag = tag || defaultTag;\n  var classes = mapToCssModules(classNames(className, {\n    'media-body': body,\n    'media-heading': heading,\n    'media-left': left,\n    'media-right': right,\n    'media-top': top,\n    'media-bottom': bottom,\n    'media-middle': middle,\n    'media-object': object,\n    'media-list': list,\n    media: !body && !heading && !left && !right && !top && !bottom && !middle && !object && !list\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nMedia.propTypes = propTypes;\nexport default Media;","import Request from \"./request\";\nexport default class CustomerMessageService {\n  static async findMessage(data = {}) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/GroupCustomerMessage/find\",\n        data: data,\n      }).then((result) => {\n        const { statusCode, data, error } = result;\n        if (statusCode === 200) {\n          resolve(data);\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  static async findDetailMessageById(groupCustomerMessageId){\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/GroupCustomerMessage/findById\",\n        data: {\n          id: groupCustomerMessageId,\n        },\n      }).then((result = {}) => {\n        const { statusCode, data, message } = result;\n        if (statusCode === 200) {\n          return resolve(data);\n        } else {\n          return reject(message);\n        }\n      }).catch(error => {\n        reject(error);\n      })\n    });\n  }\n\n  static async deleteNotification(customerMessageId){\n    return new Promise ((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/CustomerMessage/staff/deleteNotification\",\n        data: {\n          customerMessageId: customerMessageId,\n        }\n      }).then((result = {}) => {\n        const { statusCode, error } = result\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      })\n    })\n  }\n\n  static async deleteAllNotification(customerMessageId){\n    return new Promise ((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/CustomerMessage/staff/deleteAllNotification\",\n        data: {\n          customerMessageId: customerMessageId,\n        }\n      }).then((result = {}) => {\n        const { statusCode, error } = result\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      })\n    })\n  }\n\n  static async findMessagesSent(data = {}) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/CustomerMessage/findMessagesSent\",\n        data: data,\n      }).then((result) => {\n        const { statusCode, data, error } = result;\n        if (statusCode === 200) {\n          resolve(data);\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  static async insertMessage(params) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/GroupCustomerMessage/insert\",\n        data: params,\n      }).then((result) => {\n        const {statusCode, error} =result;\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      })\n    })\n  }\n\n  static async sendMessageByCustomerList(params) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/CustomerMessage/staff/sendMessageByCustomerList\",\n        data: params,\n      }).then((result) => {\n        const { statusCode, error } = result;\n        if (statusCode === 200) {\n          resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  static async sendMessageByFilter(params) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/CustomerMessage/staff/sendMessageByFilter\",\n        data: params,\n      }).then((result) => {\n        const {statusCode, error} =result;\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      })\n    })\n  }\n\n  static async uploadImage(params) {\n    return new Promise((resolve, reject) => {\n        Request.send({\n            method: \"POST\",\n            path: \"/Upload/uploadMediaFile\",\n            data: params\n        }).then(result => {\n            const { statusCode, data, message } = result\n            if (statusCode === 200) {\n                resolve(data)\n            } else {\n                throw new Error(message);\n            }\n        }).catch(error => {\n            reject(error);\n        })\n    })\n  }\n}\n"],"sourceRoot":""}