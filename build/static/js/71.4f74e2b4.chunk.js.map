{"version":3,"sources":["views/pages/manager-factory/reward.js","views/pages/manager-factory/popup.js","views/pages/manager-factory/index.js","services/payPackageService.js"],"names":["injectIntl","intl","open","toggleSidebar","item","onReloadData","useState","rewardData","setRewardData","rewardBTC","setRewardBTC","useForm","defaultValues","register","handleSubmit","useEffect","Object","keys","length","Modal","isOpen","toggle","className","ModalHeader","formatMessage","id","ModalBody","Form","onSubmit","params","paymentServicePackageUserId","profitBonus","parseFloat","PaymentPackageService","rewardProfit","then","toast","success","catch","error","FormGroup","Label","for","Input","type","name","pattern","innerRef","required","placeholder","value","onChange","e","target","rewardBTCValue","Button","Ripple","color","itemData","setItemData","Card","CardBody","Row","CardText","onClick","packageActivityStatus","warning","completePackageUser","result","err","onClickSave","outline","ManagerFactory","total","setTotal","data","setData","status","setStatus","search","setSearch","sidebarReward","setSidebarReward","openPopup","setOpenPopup","tranItem","setTranItem","toggleReward","togglePopup","filter","skip","limit","order","key","paramsFilter","setParamsFilter","getData","newParams","findUserBuyPackage","action","onClickStatus","getDescriptionStatus","NewsColumn","selector","width","minWidth","cell","row","packageExpireDate","today","moment","endPackageDate","diff","maxWidth","typeColor","getTypeColorStatus","Badge","event","preventDefault","newItem","size","UncontrolledTooltip","placement","handleFilter","searchText","Col","sm","lg","UncontrolledDropdown","DropdownToggle","caret","handleLocalizeStatus","DropdownMenu","DropdownItem","onKeyDown","noHeader","pagination","highlightOnHover","persistTableHead","paginationServer","noDataComponent","columns","sortIcon","paginationComponent","count","Number","Math","ceil","toFixed","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","memo","Promise","resolve","reject","Request","send","method","path","statusCode","Error","paymentServicePackageId"],"mappings":"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","file":"static/js/71.4f74e2b4.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  FormGroup,\n  Form,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Label,\n  Input,\n} from \"reactstrap\";\nimport { injectIntl } from \"react-intl\";\nimport { toast } from \"react-toastify\";\nimport { useForm } from \"react-hook-form\";\nimport PaymentPackageService from \"../../../services/payPackageService\";\n\nconst Reward = ({ intl, open, toggleSidebar, item, onReloadData }) => {\n  const [rewardData, setRewardData] = useState(item || {});\n  const [rewardBTC, setRewardBTC] = useState(\"0.000001\");\n\n  const { register, handleSubmit } = useForm({\n    defaultValues:{}\n  });\n\n  const rewardBTCValue = (e) => {\n    setRewardBTC(e.target.value);\n  };\n\n  useEffect(() => {\n    if (item && Object.keys(item).length > 0) {\n      setRewardData(item);\n    }\n  }, [item]);\n\n  const onClickSave = () => {\n    const params = {\n      paymentServicePackageUserId: rewardData.paymentServicePackageUserId,\n      profitBonus: parseFloat(rewardBTC),\n    };\n    PaymentPackageService.rewardProfit(params)\n      .then(() => {\n        toast.success(intl.formatMessage({ id: \"add_reward_success\" }));\n        toggleSidebar();\n        onReloadData()\n      })\n      .catch(() => {\n        toast.error(intl.formatMessage({ id: \"add_reward_failed\" }));\n      });\n  };\n\n  return (\n    <Modal\n      isOpen={open}\n      toggle={toggleSidebar}\n      className={`modal-dialog-centered `}\n    >\n      <ModalHeader toggle={toggleSidebar}>\n        {intl.formatMessage({ id: \"reward_BTC_machine\" })}\n      </ModalHeader>\n      <ModalBody>\n        <Form onSubmit={handleSubmit(onClickSave)}>\n          <FormGroup>\n            <Label for=\"paymentAmount\">\n              {intl.formatMessage({ id: \"payment_amount\" })}\n            </Label>\n            <div className=\"d-flex align-items-baseline\">\n              <Input\n                id=\"paymentAmount\"\n                type=\"number\"\n                name=\"paymentAmount\"\n                pattern=\"[0-9]+([,\\.][0-9]+)?\"\n                innerRef={register({ required: true })}\n                placeholder={intl.formatMessage({ id: \"input_amount\" })}\n                value={rewardBTC}\n                onChange={(e) => rewardBTCValue(e)}\n              />\n              <Label for=\"paymentAmount\" className=\"ml-2\">\n                {intl.formatMessage({ id: \"BTC\" })}\n              </Label>\n            </div>\n          </FormGroup>\n          <FormGroup className=\"d-flex mb-0\">\n            <Button.Ripple className=\"mr-1\" color=\"primary\" type=\"submit\">\n              {intl.formatMessage({ id: \"submit\" })}\n            </Button.Ripple>\n          </FormGroup>\n        </Form>\n      </ModalBody>\n    </Modal>\n  );\n};\n\nexport default injectIntl(Reward);\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Card,\n  CardBody,\n  CardText,\n  Row,\n} from \"reactstrap\";\nimport { injectIntl } from \"react-intl\";\nimport { toast } from \"react-toastify\";\nimport PaymentPackageService from \"../../../services/payPackageService\";\nimport { Check, X } from \"react-feather\";\n\nconst Popup = ({ intl, open, toggleSidebar, item, onReloadData }) => {\n  const [itemData, setItemData] = useState(item || {});\n\n  useEffect(() => {\n    if (item && Object.keys(item).length > 0) {\n      setItemData(item);\n    }\n  }, [item]);\n\n  const onClickSave = () => {\n    const params = {\n      id: itemData.paymentServicePackageUserId,\n    };\n    if (itemData.packageActivityStatus === 0) {\n      toast.warning(intl.formatMessage({id:\"package_completed\"}))\n      toggleSidebar();\n      return;\n    }\n    PaymentPackageService.completePackageUser(params)\n      .then((result) => {\n        toast.success(intl.formatMessage({ id: \"cancel_success\" }));\n        toggleSidebar();\n        onReloadData();\n      })\n      .catch((err) => {\n        toast.error(intl.formatMessage({ id: \"an_error_occurred\" }));\n      });\n  };\n\n  return (\n    <Modal\n      isOpen={open}\n      toggle={toggleSidebar}\n      className={`modal-dialog-centered `}\n    >\n      <ModalHeader toggle={toggleSidebar}>\n        {intl.formatMessage({ id: \"submit_cancel\" })}\n      </ModalHeader>\n      <ModalBody>\n        <Card>\n          <CardBody>\n            <Row className=\"mt-2 mb-4 mx-0\">\n              <CardText>\n                {intl.formatMessage({ id: \"want_accept_cancel\" })}\n              </CardText>\n            </Row>\n            <Row className=\"my-2 mx-2 justify-content-between\">\n              <Button.Ripple onClick={e => onClickSave()} color=\"primary\" outline>\n                <span>\n                  <Check className=\"mr-2\" />\n                </span>\n                {intl.formatMessage({ id: \"yes\" })}\n              </Button.Ripple>\n              <Button.Ripple onClick={e => toggleSidebar()} color=\"primary\" outline>\n                <span>\n                  <X className=\"mr-2\" />\n                </span>\n                {intl.formatMessage({ id: \"no\" })}\n              </Button.Ripple>\n            </Row>\n          </CardBody>\n        </Card>\n      </ModalBody>\n    </Modal>\n  );\n};\n\nexport default injectIntl(Popup);\n","import React, { memo, useState, useEffect, Fragment } from \"react\";\nimport {\n  Card,\n  Row,\n  Badge,\n  UncontrolledTooltip,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  Col,\n  Input,\n} from \"reactstrap\";\nimport { ChevronDown, Plus, Check } from \"react-feather\";\nimport { injectIntl } from \"react-intl\";\nimport DataTable from \"react-data-table-component\";\nimport ReactPaginate from \"react-paginate\";\nimport { toast } from \"react-toastify\";\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\";\nimport PaymentPackageService from \"../../../services/payPackageService\";\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\nimport Reward from \"./reward\";\nimport Popup from \"./popup\";\nimport moment from \"moment\";\n\nfunction ManagerFactory({ intl }) {\n  const DefaultFilter = {\n    filter: {},\n    skip: 0,\n    limit: 20,\n    order: {\n      key: \"createdAt\",\n      value: \"desc\",\n    },\n  };\n\n  const [total, setTotal] = useState(20);\n  const [data, setData] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [search, setSearch] = useState(\"\");\n  const [sidebarReward, setSidebarReward] = useState(false);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [tranItem, setTranItem] = useState(null);\n  const toggleReward = () => {\n    setSidebarReward(!sidebarReward);\n  };\n  const togglePopup = () => {\n    setOpenPopup(!openPopup)\n  }\n\n  // search\n  const [paramsFilter, setParamsFilter] = useState(DefaultFilter);\n\n  const getData = (params) => {\n    const newParams = {\n      ...params,\n    };\n    PaymentPackageService.findUserBuyPackage(newParams)\n      .then((result) => {\n        setTotal(result.total);\n        setData(result.data);\n      })\n      .catch((err) => {\n        toast.error(\n          intl.formatMessage(\n            { id: \"actionFailed\" },\n            { action: intl.formatMessage({ id: \"update\" }, err) }\n          )\n        );\n      });\n  };\n\n  useEffect(() => {\n    getData(paramsFilter);\n  }, []);\n\n  const onClickStatus = (value) => {\n    let newParams = {\n      ...paramsFilter,\n      filter: {\n        ...paramsFilter.filter,\n      },\n      skip: 0,\n    };\n    if (value !== null) {\n      newParams.filter.packageActivityStatus = value;\n    } else {\n      delete newParams.filter.packageActivityStatus;\n    }\n    switch (value) {\n      case null:\n        setStatus(\"all\");\n        break;\n      case 0:\n        setStatus(\"completed\");\n        break;\n      case 3:\n        setStatus(\"canceled\");\n        break;\n      case 1:\n        setStatus(\"mining\");\n        break;\n      case 2:\n        setStatus(\"standingby\");\n        break;\n      default:\n        break;\n    }\n    setParamsFilter(newParams);\n    getData(newParams, false);\n  };\n\n  const handlePagination = (page) => {\n    const newParams = {\n      ...paramsFilter,\n      skip: page.selected * paramsFilter.limit,\n    };\n    getData(newParams);\n    setParamsFilter(newParams);\n  };\n\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(total / paramsFilter.limit).toFixed(0));\n    return (\n      <ReactPaginate\n        previousLabel={\"\"}\n        nextLabel={\"\"}\n        breakLabel=\"...\"\n        pageCount={count || 1}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={2}\n        activeClassName=\"active\"\n        forcePage={paramsFilter.skip / paramsFilter.limit}\n        onPageChange={(page) => handlePagination(page)}\n        pageClassName={\"page-item\"}\n        nextLinkClassName={\"page-link\"}\n        nextClassName={\"page-item next\"}\n        previousClassName={\"page-item prev\"}\n        previousLinkClassName={\"page-link\"}\n        pageLinkClassName={\"page-link\"}\n        breakClassName=\"page-item\"\n        breakLinkClassName=\"page-link\"\n        containerClassName={\n          \"pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1\"\n        }\n      />\n    );\n  };\n\n  const getDescriptionStatus = (id) => {\n    switch (id) {\n      case 0:\n        return intl.formatMessage({ id: \"package_activity_completed\" });\n        case 1:\n        return intl.formatMessage({ id: \"package_activity_mining\" });\n      case 2:\n        return intl.formatMessage({ id: \"package_activity_standingby\" });\n        case 3:\n        return intl.formatMessage({ id: \"package_activity_canceled\" });\n      default:\n        return \"N/A\";\n    }\n  };\n\n  const getTypeColorStatus = (id) => {\n    switch (id) {\n      case 2:\n        return \"warning\";\n      case 1:\n        return \"secondary\";\n      default:\n        return;\n    }\n  };\n\n  const NewsColumn = [\n    {\n      name: \"ID\",\n      selector: \"paymentServicePackageUserId\",\n      width: \"80px\",\n    },\n    {\n      name: intl.formatMessage({ id: \"name_machine\" }),\n      selector: \"packageName\",\n      minWidth: \"150px\",\n    },\n    {\n      name: intl.formatMessage({ id: \"package_type\" }),\n      selector: \"packageType\",\n      minWidth: \"150px\",\n    },\n    {\n      name: intl.formatMessage({ id: \"account\" }),\n      selector: \"username\",\n      minWidth: \"150px\",\n    },\n    {\n      name: intl.formatMessage({ id: \"duration_machine\" }),\n      selector: \"packageDuration\",\n      minWidth: \"100px\",\n      cell: (row) => {\n        const { packageExpireDate } = row\n        const today = moment();\n        const endPackageDate = moment(packageExpireDate);\n        return (\n          <div>\n            {endPackageDate.diff(today, 'days') > 0 ? endPackageDate.diff(today, 'days') : 0}\n          </div>\n        )\n      }\n    },\n    {\n      name: intl.formatMessage({ id: \"profitClaimed\" }),\n      selector: \"profitClaimed\",\n      minWidth: \"100px\",\n    },\n    {\n      name: intl.formatMessage({ id: \"profitActual\" }),\n      selector: \"profitActual\",\n      minWidth: \"100px\",\n    },\n    {\n      name: intl.formatMessage({ id: \"profitBonus\" }),\n      selector: \"profitBonus\",\n      minWidth: \"100px\",\n    },\n    {\n      name: intl.formatMessage({ id: \"profitBonusClaimed\" }),\n      selector: \"profitBonusClaimed\",\n      minWidth: \"100px\",\n    },\n    {\n      name: intl.formatMessage({ id: \"status\" }),\n      selector: \"packageActivityStatus\",\n      maxWidth: \"200px\",\n      cell: (row) => {\n        const { packageActivityStatus } = row;\n        const typeColor = getTypeColorStatus(packageActivityStatus);\n        return (\n          <Badge color={typeColor}>{getDescriptionStatus(packageActivityStatus)}</Badge>\n        );\n      },\n    },\n    {\n      name: intl.formatMessage({ id: \"action\" }),\n      selector: \"action\",\n      maxWidth: \"150px\",\n      cell: (row) => {\n        const { paymentServicePackageUserId } = row;\n        return (\n          <>\n            <span\n              className=\"full-width cursor-pointer text-secondary\"\n              onClick={(event) => {\n                event.preventDefault();\n                let newItem = { ...row };\n                setTranItem(newItem);\n                toggleReward();\n              }}\n            >\n              <Plus size={15} id=\"reward\" />\n              <UncontrolledTooltip placement=\"top\" target={\"reward\"}>\n                {intl.formatMessage({ id: \"reward\" })}\n              </UncontrolledTooltip>\n            </span>\n            <span\n              className=\"full-width cursor-pointer text-secondary\"\n              onClick={(event) => {\n                event.preventDefault();\n                let newItem = { ...row };\n                setTranItem(newItem);\n                togglePopup();\n              }}\n            >\n              <Check size={15} id=\"delete\" />\n              <UncontrolledTooltip placement=\"top\" target={\"delete\"}>\n                {intl.formatMessage({ id: \"complete\" })}\n              </UncontrolledTooltip>\n            </span>\n          </>\n        );\n      },\n    },\n  ];\n\n\n  const handleLocalizeStatus = (value) => {\n\n    switch (value) {\n      case \"all\":\n        return intl.formatMessage({ id: \"all_status\" });\n      case \"mining\":\n        return intl.formatMessage({ id: \"package_activity_mining\" });\n      case \"standingby\":\n        return intl.formatMessage({ id: \"package_activity_standingby\" });\n      case \"completed\":\n        return intl.formatMessage({ id: \"package_activity_completed\" });\n      case \"canceled\":\n        return intl.formatMessage({ id: \"package_activity_canceled\" });\n      default:\n        return \"\";\n    }\n  };\n\n  \n\n  const getDataSearch = (params) => {\n    getData(params);\n  };\n  const handleFilter = (e) => {\n    const { value } = e.target;\n    if (value === \"\") {\n      delete paramsFilter.searchText\n      delete paramsFilter.filter.packageActivityStatus\n      setStatus(\"all\");\n      getData(paramsFilter);\n      setParamsFilter(paramsFilter);\n    } else {\n      let newParams = {\n        ...paramsFilter,\n        filter: {\n          ...paramsFilter.filter,\n        },\n        searchText: value,\n        skip: 0,\n      };\n      switch (status) {\n        case \"all\":\n          break;\n        case \"completed\":\n          newParams.filter.packageActivityStatus = 0;\n          break;\n        case \"mining\":\n          newParams.filter.packageActivityStatus = 1;\n          break;\n        case \"standingby\":\n          newParams.filter.packageActivityStatus = 2;\n          break;\n        case \"canceled\":\n          newParams.filter.packageActivityStatus = 3;\n          break;\n        default:\n          break;\n      }\n      setParamsFilter(newParams);\n      getDataSearch(newParams, false);\n    }\n  };\n  const onKeydown = (e) => {\n    if (e.key === \"Enter\") {\n      handleFilter(e);\n    }\n  };\n  const onChangeSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const onReloadData = () => {\n    setParamsFilter(paramsFilter);\n    getData(paramsFilter);\n  };\n\n  return (\n    <Fragment>\n      <Card className=\"p-1\">\n        <Row className=\"px-0 justify-content-between\">\n          <Col sm={12} lg={4} className=\"d-flex mb-1\">\n            <UncontrolledDropdown>\n              <DropdownToggle color=\"primary\" caret outline>\n                {handleLocalizeStatus(status)}\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem\n                  className=\"full-width\"\n                  value=\"all\"\n                  onClick={() => onClickStatus(null)}\n                >\n                  {intl.formatMessage({ id: \"all_status\" })}\n                </DropdownItem>\n                <DropdownItem\n                  className=\"full-width\"\n                  value=\"mining\"\n                  onClick={() => onClickStatus(1)}\n                >\n                  {intl.formatMessage({ id: \"package_activity_mining\" })}\n                </DropdownItem>\n                <DropdownItem\n                  className=\"full-width\"\n                  value=\"standingby\"\n                  onClick={() => onClickStatus(2)}\n                >\n                  {intl.formatMessage({ id: \"package_activity_standingby\" })}\n                </DropdownItem>\n                <DropdownItem\n                  className=\"full-width\"\n                  value=\"completed\"\n                  onClick={() => onClickStatus(0)}\n                >\n                  {intl.formatMessage({ id: \"package_activity_completed\" })}\n                </DropdownItem>\n                <DropdownItem\n                  className=\"full-width\"\n                  value=\"canceled\"\n                  onClick={() => onClickStatus(3)}\n                >\n                  {intl.formatMessage({ id: \"package_activity_canceled\" })}\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Col>\n          <Col className=\"mb-1\" sm={12} lg={4}>\n            <Input\n              value={search}\n              onChange={onChangeSearch}\n              onKeyDown={onKeydown}\n              placeholder={intl.formatMessage({ id: \"search\" })}\n            />\n          </Col>\n        </Row>\n\n        <DataTable\n          noHeader\n          pagination\n          highlightOnHover\n          persistTableHead\n          paginationServer\n          noDataComponent={<span className=\"mt-2\">{intl.formatMessage({ id: \"table_empty\" })}</span>}\n          className=\"react-dataTable\"\n          columns={NewsColumn}\n          sortIcon={<ChevronDown size={10} />}\n          paginationComponent={CustomPagination}\n          data={data}\n        />\n      </Card>\n      {tranItem && sidebarReward && <Reward\n        item={tranItem}\n        open={sidebarReward}\n        toggleSidebar={toggleReward}\n        onReloadData={onReloadData}\n      />}\n      {tranItem && openPopup && <Popup\n        item={tranItem}\n        open={openPopup}\n        toggleSidebar={togglePopup}\n        onReloadData={onReloadData}\n      />}\n    </Fragment>\n  );\n}\n\nexport default injectIntl(memo(ManagerFactory));\n","import Request from \"./request\";\nexport default class PaymentPackageService {\n  static async findPaymentPackage(data = {}) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/find\",\n        data: data,\n      }).then((result) => {\n        const { statusCode, data, error } = result;\n        if (statusCode === 200) {\n          resolve(data);\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  static async findUserBuyPackage(data = {}) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/findUserBuyPackage\",\n        data: data,\n      }).then((result) => {\n        const { statusCode, data, error } = result;\n        if (statusCode === 200) {\n          resolve(data);\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  static async findById(paymentServicePackageId) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/findById\",\n        data: {\n          id: paymentServicePackageId\n        },\n      }).then((result) => {\n        const {statusCode, error} =result;\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      })\n    })\n  }\n\n  static async completePackageUser(params) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/adminCompletePackagesById\",\n        data: params\n      }).then((result) => {\n        const {statusCode, error} =result;\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      })\n    })\n  }\n\n  static async insertPaymentPackage(params) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/insert\",\n        data: params,\n      }).then((result) => {\n        const {statusCode, error} =result;\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      })\n    })\n  }\n\n  static async updateById(params){\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/updateById\",\n        data: params, \n      }).then((result) => {\n        const { statusCode, error } = result;\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    })\n  }\n\n  static async activePackagesList(paymentServicePackageId){\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/activatePackagesByIdList\",\n        data: {\n          \"idList\": [\n            paymentServicePackageId\n          ]\n        }, \n      }).then((result) => {\n        const { statusCode, error } = result;\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    })\n  }\n\n  static async deactivatePackagesByIdList(paymentServicePackageId){\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/deactivatePackagesByIdList\",\n        data: {\n          \"idList\": [\n            paymentServicePackageId\n          ]\n        },\n      }).then((result) => {\n        const { statusCode, error } = result;\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    })\n  }\n\n  static async rewardProfit(params){\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/rewardProfitBonusForUser\",\n        data: params, \n      }).then((result) => {\n        const { statusCode, error } = result;\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    })\n  }\n\n  static async deleteById(params){\n    return new Promise ((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/deleteById\",\n        data: params\n      }).then((result = {}) => {\n        const { statusCode, error } = result\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      })\n    })\n  }\n\n  static async countAllUserPackage(data = {}) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/countAllUserPackage\",\n        data: data,\n      }).then((result) => {\n        const { statusCode, data, error } = result;\n        if (statusCode === 200) {\n          resolve(data);\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  static async historyCancelServicePackage(data = {}) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/admin/historyCancelServicePackage\",\n        data: data,\n      }).then((result) => {\n        const { statusCode, data, error } = result;\n        if (statusCode === 200) {\n          resolve(data);\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  static async historyCompleteServicePackage(data = {}) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/admin/historyCompleteServicePackage\",\n        data: data,\n      }).then((result) => {\n        const { statusCode, data, error } = result;\n        if (statusCode === 200) {\n          resolve(data);\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  static async updateChangeComplete(params){\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentServicePackage/admin/updateById\",\n        data: params, \n      }).then((result) => {\n        const { statusCode, error } = result;\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    })\n  }\n}\n"],"sourceRoot":""}