{"version":3,"sources":["pages/management-sms/list/Table.js","pages/management-sms/list/columns.js","pages/management-sms/list/index.js","ultils/convertDate.js","ultils/currentFormacy.js","components/Pagination/Pagination.js","components/Modal/management-paymentMethod/ModalDeleteById.js"],"names":["Table","useState","listMessageSMS","setListMessageSMS","currentPage","setCurrentPage","totalRecords","setTotalRecords","rowsPerPage","undefined","setFilterStartDate","setEndDate","defaultValue","setDefaultValue","isOpenModal","setIsOpenModal","id","name","dataToDelete","useEffect","getListMessageSMS","skip","limit","params","Service","send","method","path","data","headers","then","res","statusCode","message","count","toast","warn","handlePagination","page","selected","CustomPagination","Pagination","total","handleFilterStartDate","value","moment","format","param","startDate","endDate","Card","className","Row","style","marginBottom","Col","lg","FormGroup","position","placeholder","options","mode","onChange","date","size","onClick","right","transform","color","columns","minWidth","maxWidth","selector","cell","row","to","smsMessageId","smsMessageAppUserId","currencyFormat","smsMessageBalanceAmount","overflow","whiteSpace","WebkitLineClamp","WebkitBoxOrient","textOverflow","smsHash","smsMessageContent","smsReceiveMessageTime","smsReceiveMessageDate","convertTimeDate","createdAt","UncontrolledDropdown","DropdownToggle","tag","DropdownMenu","DropdownItem","Link","noHeader","persistTableHead","sortIcon","noDataComponent","ModalDeleteById","deletePaymentMethodId","success","MassageSMS","toString","convertDateVN","Intl","NumberFormat","currencyFormatUSD","minimumFractionDigits","props","Number","Math","ceil","for","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","breakClassName","breakLinkClassName","pageLinkClassName","containerClassName","isOpen","toggle","fontWeight","width","marginRight"],"mappings":"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","file":"static/js/60.9467ed16.chunk.js","sourcesContent":["import React, {Fragment, useEffect, useState} from \"react\";\nimport {Card, Col, FormGroup, Row} from \"reactstrap\";\nimport {columns} from \"./columns\";\nimport {Calendar, ChevronDown} from \"react-feather\";\nimport DataTable from \"react-data-table-component\";\nimport Service from \"../../../services/request\";\nimport {toast} from \"react-toastify\";\nimport Pagination from \"../../../components/Pagination/Pagination\";\n// import {useHistory} from \"react-router-dom\"\nimport ModalDeleteById from \"../../../components/Modal/management-paymentMethod/ModalDeleteById\";\nimport Flatpickr from \"react-flatpickr\";\nimport moment from \"moment\";\nimport \"flatpickr/dist/themes/material_blue.css\"\n\nconst Table=()=>{\n    // const history = useHistory()\n    const [listMessageSMS,setListMessageSMS]=useState([])\n    const [currentPage, setCurrentPage]=useState(0)\n    const [totalRecords, setTotalRecords]=useState(0)\n    const rowsPerPage=10\n    const [filterStartDate,setFilterStartDate]=useState(undefined)\n    const [endDate, setEndDate]=useState(undefined)\n    const [defaultValue,setDefaultValue]=useState(null)\n    const [isOpenModal,setIsOpenModal]=useState(false)\n    const [dataToDelete,setDataToDelete]=useState({\n        id:null,\n        name:null\n    })\n    useEffect(()=>{\n        const params={\n            skip: currentPage,\n            limit: rowsPerPage\n        }\n        getListMessageSMS(params)\n    },[])\n    const getListMessageSMS=(params)=>{\n        Service.send({\n            method:\"POST\",path:'/SMSMessage/Find',data:params,headers : {}\n        })\n            .then(res=>{\n                if (res) {\n                    const { statusCode, data, message } = res\n                    if (statusCode === 200) {\n                        setListMessageSMS(data.data)\n                        setTotalRecords(data.count)\n                    } else {\n                        toast.warn(message || 'Đã có lỗi xảy ra!')\n                    }\n                } else {\n                    setListMessageSMS([])\n                }\n            })\n    }\n    const handlePagination = page => {\n        const params = {\n            skip: page?.selected*rowsPerPage,\n            limit: rowsPerPage,\n        }\n        setCurrentPage(page?.selected*rowsPerPage)\n        getListMessageSMS(params)\n    }\n    const CustomPagination = () => {\n        return (\n            <Pagination\n                handlePagination={handlePagination}\n                currentPage={currentPage}\n                rowsPerPage={rowsPerPage}\n                total={totalRecords}\n            />\n        )\n    }\n    const handleDataToDelete=(id,name)=>{\n        dataToDelete.id=id\n        dataToDelete.name=name\n        setDataToDelete({...dataToDelete})\n    }\n    const handleFilterStartDate=(value)=>{\n        if(value===undefined){\n            setFilterStartDate(undefined)\n            setEndDate(undefined)\n        }\n        else{\n            setFilterStartDate(moment(value[0]).format())\n            setEndDate(moment(value[1]).format())\n        }\n        const param={\n            skip:0,\n            limit:rowsPerPage,\n            startDate:value?`${moment(value[0]).format()}` : undefined,\n            endDate:value?`${moment(value[1]).format()}` : undefined,\n            // searchText:dataFilter.searchText ||undefined,\n            // filter:{\n            //     paymentStatus: dataFilter.status ||undefined\n            // }||undefined,\n        }\n        getListMessageSMS(param)\n    }\n    const deletePaymentMethodId=(id)=>{\n        Service.send({\n            method:\"POST\",path:'/PaymentMethod/deleteById',data:{id},headers : {}\n        })\n            .then(res=>{\n                if (res) {\n                    const { statusCode,message } = res\n                    if (statusCode === 200) {\n                        toast.success(\"Xoá thành công\")\n                        getListMessageSMS({\n                            skip: currentPage,\n                            limit: rowsPerPage\n                        })\n                    } else {\n                        toast.warn(message || 'Đã có lỗi xảy ra!')\n                    }\n                } else {\n                    setListMessageSMS([])\n                }\n            })\n    }\n\n    return(\n        <Fragment>\n            <Card className={\"p-2\"}>\n                <div className={'container-header'}>\n                    <Row style={{marginBottom:\"20px\"}} className={\"justify-content-between\"}>\n                        <Col lg={6}>\n                            <FormGroup style={{position:\"relative\"}}>\n                                <Flatpickr\n                                    id='startDate'\n                                    placeholder={\"Chọn ngày\"}\n                                    options={{\n                                        mode: 'range'\n                                    }}\n                                    className={`form-control form-control__date custom-flatpickr-pj`}\n                                    onChange={(date) => handleFilterStartDate(date, filterStartDate, endDate)}\n                                    // disabled={props?.disabled}\n                                    value={defaultValue}\n                                />\n                                <Calendar size={20} onClick={()=>{\n                                    setDefaultValue(!defaultValue)\n                                    handleFilterStartDate(undefined)\n                                }}\n                                          style={{position:\"absolute\", right:\"15px\",transform:\"translateY(calc(-100% - 10px))\",color:\"#82868b\"}}\n                                />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                </div>\n                <DataTable\n                    columns={columns(setIsOpenModal,handleDataToDelete)}\n                    noHeader\n                    persistTableHead\n                    data={listMessageSMS}\n                    sortIcon={<ChevronDown />}\n                    className='datatable-custom-project p-0'\n                    noDataComponent={<h3>Không tìm thấy dữ liệu</h3>}\n                />\n                <div>\n                    <CustomPagination/>\n                </div>\n            </Card>\n            <ModalDeleteById isOpenModal={isOpenModal} setIsOpenModal={setIsOpenModal} deletePaymentMethodId={deletePaymentMethodId} dataToDelete={dataToDelete}/>\n        </Fragment>\n    )\n}\nexport default Table","import {Link} from \"react-router-dom\";\n// import {convertTimeDate} from \"../../../ultils/convertDate\";\nimport { DropdownItem, DropdownMenu, DropdownToggle, UncontrolledDropdown} from \"reactstrap\";\nimport { FileText, MoreVertical} from \"react-feather\";\nimport React from \"react\";\nimport {currencyFormat} from \"../../../ultils/currentFormacy\";\nimport {convertTimeDate} from \"../../../ultils/convertDate\";\n\n// const statusObj = {\n//     active: 'light-success',\n//     notActive:'light-danger'\n// }\nexport const columns=(setIsOpenModal,handleDataToDelete)=>[\n    {\n        name: 'ID',\n        minWidth: '80px',\n        maxWidth: \"120px\",\n        selector: 'smsMessageId',\n        cell: row => (\n            <Link\n                to={`/MessageSMS/detail/${row?.smsMessageId}`}\n                className='user-name text-truncate mb-0'>\n                <span>{row?.smsMessageId}</span>\n            </Link>\n        )\n    },\n    {\n        name: 'ID KHÁCH HÀNG',\n        minWidth: '160px',\n        selector: 'paymentMethodName',\n        cell:row =>\n            <Link\n                to={`/customer/detail/${row?.smsMessageAppUserId}`}\n                className='user-name text-truncate mb-0'>\n                <span>{row?.smsMessageAppUserId}</span>\n            </Link>\n    }\n    ,\n    {\n        name: \"SỐ TIỀN\",\n        minWidth: '200px',\n        selector: 'createdAt',\n        cell: row => (\n            currencyFormat(row?.smsMessageBalanceAmount || \"\")\n        )\n    },\n    {\n        name: \"SMS HASH\",\n        minWidth: '220px',\n        selector: 'smsHash',\n        cell: row => <div style={{overflow:\"hidden\"}}><p style={{ whiteSpace:\"nowrap\",\n            WebkitLineClamp:1,\n            WebkitBoxOrient:\"vertical\",\n            textOverflow:\"ellipsis\",\n        }}>{row?.smsHash}</p></div>\n    }\n    ,\n    {\n        name: 'NỘI DUNG TIN NHẮN',\n        minWidth: '300px',\n        maxWidth:\"600px\",\n        selector: 'smsMessageContent',\n        cell: row => <div style={{overflow:\"hidden\"}}><p style={{ whiteSpace:\"nowrap\",\n            WebkitLineClamp:1,\n            WebkitBoxOrient:\"vertical\",\n            textOverflow:\"ellipsis\",\n        }}>{row?.smsMessageContent}</p></div>\n    },\n    {\n        name: \"THÒI GIAN NHẬN\",\n        minWidth: '160px',\n        cell: row => (\n            `${row.smsReceiveMessageTime} - ${row.smsReceiveMessageDate}`\n        )\n    },\n    {\n        name: \"NGÀY TẠO\",\n        minWidth: '160px',\n        cell: row => (\n                convertTimeDate(row.createdAt)\n            )\n    },\n    // {\n    //     name: 'TRẠNG THÁI',\n    //     minWidth: '150px',\n    //     selector: 'paymentStatus',\n    //     center: true,\n    //     cell: row => (\n    //         <Badge  className='text-capitalize' color={statusObj[row?.smsMessageStatus===\"Completed\" ?\"active\": row?.smsMessageStatus===\"Canceled\" ? \"notActive\": \"\"]}>\n    //             {\n    //                 ( row?.smsMessageStatus === \"Completed\" ? 'Đã duyệt' : row?.smsMessageStatus===\"Canceled\"? 'Từ chối': row?.smsMessageStatus===\"New\"? \"Chưa duyệt\":\"\")}\n    //         </Badge>\n    //     )\n    // },\n    {\n        name: 'HÀNH ĐỘNG',\n        minWidth: '140px',\n        maxWidth: '150px',\n        right: true,\n        cell: row => (\n            <UncontrolledDropdown>\n                <DropdownToggle tag='div' className='btn btn-sm'>\n                    <MoreVertical size={14} className='cursor-pointer' />\n                </DropdownToggle>\n                <DropdownMenu right>\n                    {\n                        (\n                            <DropdownItem\n                                tag={Link}\n                                to={`/MessageSMS/detail/${row.smsMessageId}`}\n                                className='w-100'>\n                                <FileText size={14} className='mr-50' />\n                                <span className='align-middle'>Chi tiết</span>\n                            </DropdownItem>\n                        )\n                    }\n                    {/*<DropdownItem*/}\n                    {/*    tag={Link}*/}\n                    {/*    to={`/MessageSMS/update/${row.smsMessageId}`}*/}\n                    {/*    className='w-100'>*/}\n                    {/*    <Archive size={14} className='mr-50' />*/}\n                    {/*    <span className='align-middle'>Chỉnh sửa</span>*/}\n                    {/*</DropdownItem>*/}\n                    {/*<DropdownItem*/}\n                    {/*    onClick={()=> {*/}\n                    {/*        setIsOpenModal(true)*/}\n                    {/*        handleDataToDelete(row?.paymentMethodId,row?.paymentMethodName)*/}\n                    {/*    }}*/}\n                    {/*    className='w-100'>*/}\n                    {/*    <Archive size={14} className='mr-50' />*/}\n                    {/*    <span className='align-middle'>Xoá</span>*/}\n                    {/*</DropdownItem>*/}\n                </DropdownMenu>\n            </UncontrolledDropdown>\n        )\n    }\n]","import Table from \"./Table\"\nconst MassageSMS =()=>{\n    return(\n        <div id=\"PaymentMethod\">\n            <div className=\"payment-method\">\n                <Table/>\n            </div>\n        </div>\n    )\n}\nexport default MassageSMS","import moment from \"moment\";\n\nexport const convertTimeDate=(value)=>{\n    return moment(value?.toString()).format(\"HH:mm   DD/MM/YYYY\")\n}\nexport const convertDateVN=(value)=>{\n    return moment(value?.toString()).format(\"DD/MM/YYYY\")\n}","export const currencyFormat=(value)=>{\n    return new Intl.NumberFormat(\"vi-VN\").format(value)\n}\nexport const currencyFormatUSD = (value) => {\n    return new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 2\n    }).format(value)\n}\n","import {Label} from \"reactstrap\"\nimport ReactPaginate from \"react-paginate\"\nimport React from \"react\"\nimport './style/pagination.scss'\n\nconst Pagination = props => {\n    const {handlePagination, currentPage, rowsPerPage, total} = props\n    const totalItemPage = () => {\n        const totalRecords = total\n        if (totalRecords - (currentPage + 1 * rowsPerPage) < 0) {\n            return totalRecords\n        } else return (currentPage + 1) * rowsPerPage\n    }\n\n    const indexStartItem = () => {\n        if (currentPage === 0) {\n            return 1\n        } else return (rowsPerPage * (currentPage)) + 1\n    }\n\n    const count = Number(Math.ceil(total / rowsPerPage))\n\n    return count>1?(\n        <div className='d-flex align-items-center justify-content-between' id={'pagination'}>\n            <div className='d-flex align-items-center w-100 description-desktop'>\n                <Label for='rows-per-page' className={'mb-0'}>Hiển thị từ {indexStartItem()} - {totalItemPage()}/{total}</Label>\n            </div>\n            <ReactPaginate\n                previousLabel={''}\n                nextLabel={''}\n                pageCount={count || 1}\n                activeClassName='active'\n                forcePage={currentPage !== 0 ? currentPage/rowsPerPage : 0}\n                onPageChange={page => handlePagination(page)}\n                pageClassName={'page-item'}\n                nextLinkClassName={'page-link'}\n                nextClassName={'page-item next'}\n                previousClassName={'page-item prev'}\n                previousLinkClassName={'page-link'}\n                breakClassName={'page-item'}\n                breakLinkClassName={'page-link'}\n                pageLinkClassName={'page-link'}\n                containerClassName={'pagination react-paginate justify-content-end my-2 '}\n            />\n        </div>\n    ):\"\"\n}\nexport default Pagination\n","import {Button, FormGroup, Input, Label, Modal, ModalBody, ModalHeader} from \"reactstrap\";\n\nconst ModalDeleteById=(props)=>{\n    return(\n        <div>\n            <Modal\n                isOpen={props?.isOpenModal}\n                className={`modal-dialog-centered `}\n            >\n                <ModalHeader\n                    toggle={() => props.setIsOpenModal(false)}\n                >\n                    Xoá phương thức thanh toán\n                </ModalHeader>\n                <ModalBody>\n                    <h4>Bạn muốn xoá phương thức\n                        <span style={{fontWeight:\"bold\"}}> {props?.dataToDelete?.name}</span>\n                    </h4>\n                    <br/>\n                    <br/>\n\n                    <div className={\"d-flex justify-content-end\"} >\n                        <Button\n                            style={{width:\"105px\",marginRight:\"20px\"}}\n                            onClick={()=>{\n                                props.setIsOpenModal(false)\n                            }                        }\n                            color={\"primary\"}\n                        >\n                            Huỷ\n                        </Button>\n                        <Button\n                            onClick={()=>{\n                                props?.deletePaymentMethodId(props?.dataToDelete?.id)\n                                props?.setIsOpenModal(false)\n                            }                        }\n                            color={\"primary\"}\n                        >\n                            Xác nhận\n                        </Button>\n                    </div>\n                </ModalBody>\n            </Modal>\n        </div>\n    )\n}\nexport default ModalDeleteById"],"sourceRoot":""}