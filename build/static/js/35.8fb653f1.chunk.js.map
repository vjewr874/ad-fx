{"version":3,"sources":["components/Modal/management-customer/ModalUpdatePasswordCustomer.js","pages/management-customer/components/customer-info/CustomerInfo.js","pages/management-customer/components/customer-history/column.js","pages/management-customer/components/customer-history/CustomerHistory.js","pages/management-customer/detail/index.js","ultils/convertDate.js","components/Loader/index.js","ultils/currentFormacy.js","components/Pagination/Pagination.js","services/customer.js"],"names":["ModalUpdatePasswordCustomer","props","useState","passwordChange","setPasswordChange","Modal","isOpen","isOpenModal","className","ModalHeader","toggle","handleIsOpenModal","ModalBody","FormGroup","Label","Input","onChange","e","target","value","placeholder","Button","onClick","handleUpdatePasswordCustomer","color","listPermissionUser","JSON","parse","window","localStorage","getItem","permissions","split","listbanks","label","CustomerInfo","undefined","nameBank","setNameBank","setNameNetwork","setIsOpenModal","useEffect","lotteryInfo","tennganhang","cryptoNetwork","Card","title","img","userAvatar","defaultAvatar","imgHeight","imgWidth","width","height","style","marginBottom","cursor","currencyFormatUSD","wallets","find","wallet","walletType","balance","Row","Col","lg","sm","xs","username","disabled","id","defaultValue","tentaikhoan","sotaikhoan","isClearable","classNamePrefix","options","item","alt","src","imageBeforeIdentityCard","imageAfterIdentityCard","borderTop","borderBottom","totalTodayDeposit","totalTodayWithdraw","totalBet","totalTodayBet","includes","outline","handleChangeUser","document","getElementById","handleActiveUser","active","size","marginTop","marginRight","trueFalse","columnsDetail","typeList","name","minWidth","cell","row","to","paymentAmountIn","total","paymentAmount","paymentAmountOut","convertTimeDate","createdAt","paymentApproveDate","orderStatus","paymentStatus","typesHistoryCustomer","api","CustomerHistory","activeTab","setActiveTab","typeAPI","setTypeAPI","setTypeList","listData","setListData","currentPage","setCurrentPage","totalRecords","setTotalRecords","data","filter","appUserId","IdUser","skip","limit","getDetailHistoryList","handlePagination","page","params","selected","CustomPagination","Pagination","rowsPerPage","Service","send","method","path","headers","then","res","statusCode","message","toast","warn","Nav","tabs","map","index","NavItem","NavLink","tab","TabContent","TabPane","tabId","columns","noHeader","persistTableHead","sortIcon","noDataComponent","Detail","history","useHistory","setData","isLoadingSubmit","setIsLoadingSubmit","useParams","detailLottery","Customer","detailCustomer","Loader","updateDetailCustomer","success","email","password","updatePasswordCustomer","totalWallets","forEach","PointWallet","go","moment","toString","format","convertDateVN","currencyFormat","Intl","NumberFormat","minimumFractionDigits","count","Number","Math","ceil","for","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","breakClassName","breakLinkClassName","pageLinkClassName","containerClassName","Promise","resolve","reject","Request","result","error","Error","catch","type"],"mappings":"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","file":"static/js/35.8fb653f1.chunk.js","sourcesContent":["import {Button, FormGroup, Input, Label, Modal, ModalBody, ModalHeader} from \"reactstrap\";\n\nimport React, {useState} from \"react\";\n\nconst ModalUpdatePasswordCustomer=(props)=>{\n    const [passwordChange,setPasswordChange]=useState(\"\")\n    return(\n        <div>\n            <Modal\n                isOpen={props?.isOpenModal}\n                className={`modal-dialog-centered `}\n            >\n                <ModalHeader\n                    toggle={() => props.handleIsOpenModal(false)}\n                >\n                    Đổi mật khẩu\n                </ModalHeader>\n                <ModalBody>\n                    <FormGroup>\n                        <Label>Mật khẩu mới</Label>\n                        <Input\n                            onChange={e=>setPasswordChange(e.target.value)}\n                            placeholder={\"Vui lòng nhập mật khẩu mới\"}\n                        />\n\n                    </FormGroup>\n                    <Button\n                        onClick={()=>{\n                            props.handleUpdatePasswordCustomer(passwordChange)\n                            props.handleIsOpenModal(false)\n                        }                        }\n                        color={\"primary\"}\n                    >\n                        Xác nhận\n                    </Button>\n                </ModalBody>\n            </Modal>\n        </div>\n    )\n}\nexport default ModalUpdatePasswordCustomer","import React, { useState } from 'react'\nimport { Button, Card, Col, FormGroup, Input, Label, Row } from 'reactstrap'\nimport 'flatpickr/dist/themes/material_blue.css'\nimport './styles/customer-info.scss'\nimport Avatar from '@components/avatar'\nimport ModalUpdatePasswordCustomer from '../../../../components/Modal/management-customer/ModalUpdatePasswordCustomer'\nimport { Lock, RefreshCw } from 'react-feather'\nimport { currencyFormatUSD } from '../../../../ultils/currentFormacy'\nimport Flatpickr from 'react-flatpickr'\nimport Select from 'react-select'\nimport defaultAvatar from '../../../../assets/images/new_image/avatar_default.jpg'\nimport { useEffect } from 'react'\nconst userData = JSON.parse(window.localStorage.getItem('userData'))\nconst listPermissionUser = userData.permissions.split(',')\n\nconst listbanks = [\n  {\n    value: 'Agribank',\n    label: 'Agribank'\n  },\n  {\n    value: 'CB',\n    label: 'CB'\n  },\n  {\n    value: 'Oceanbank',\n    label: 'Oceanbank'\n  },\n  {\n    value: 'GPBank',\n    label: 'GPBank'\n  },\n  {\n    value: 'BIDV',\n    label: 'BIDV'\n  },\n  {\n    value: 'VietinBank',\n    label: 'VietinBank'\n  },\n  {\n    value: 'Vietcombank',\n    label: 'Vietcombank'\n  },\n  {\n    value: 'VPBank',\n    label: 'VPBank'\n  },\n  {\n    value: 'MB',\n    label: 'MB'\n  },\n  {\n    value: 'Techcombank',\n    label: 'Techcombank'\n  },\n  {\n    value: 'ACB',\n    label: 'ACB'\n  },\n  {\n    value: 'SHB',\n    label: 'SHB'\n  },\n  {\n    value: 'HDBank',\n    label: 'HDBank'\n  },\n  {\n    value: 'SCB',\n    label: 'SCB'\n  },\n  {\n    value: 'Sacombank',\n    label: 'Sacombank'\n  },\n  {\n    value: 'TPBank',\n    label: 'TPBank'\n  },\n  {\n    value: 'VIB',\n    label: 'VIB'\n  },\n  {\n    value: 'MSB',\n    label: 'MSB'\n  },\n  {\n    value: 'SeABank',\n    label: 'SeABank'\n  },\n  {\n    value: 'OCB',\n    label: 'OCB'\n  },\n  {\n    value: 'Eximbank',\n    label: 'Eximbank'\n  },\n  {\n    value: 'LienVietPostBank',\n    label: 'LienVietPostBank'\n  },\n  {\n    value: 'PVcombank',\n    label: 'PVcombank'\n  },\n  {\n    value: 'Bac A Bank',\n    label: 'Bac A Bank'\n  },\n  {\n    value: 'Đông Á Bank',\n    label: 'Đông Á Bank'\n  },\n  {\n    value: 'BaoViet Bank',\n    label: 'BaoViet Bank'\n  },\n  {\n    value: 'ABBANK',\n    label: 'ABBANK'\n  },\n  {\n    value: 'Nam A Bank',\n    label: 'Nam A Bank'\n  },\n  {\n    value: 'VietBank',\n    label: 'VietBank'\n  },\n  {\n    value: 'Viet A Bank',\n    label: 'Viet A Bank'\n  },\n  {\n    value: 'NCB',\n    label: 'NCB'\n  },\n  {\n    value: 'BanVietBank',\n    label: 'BanVietBank'\n  },\n  {\n    value: 'Kienlongbank',\n    label: 'Kienlongbank'\n  },\n  {\n    value: 'Saigonbank',\n    label: 'Saigonbank'\n  },\n  {\n    value: 'PG Bank',\n    label: 'PG Bank'\n  },\n  {\n    value: 'Shinhan Bank',\n    label: 'Shinhan Bank'\n  },\n  {\n    value: 'HSBC',\n    label: 'HSBC'\n  },\n  {\n    value: 'Woori Bank',\n    label: 'Woori Bank'\n  },\n  {\n    value: 'CIMB Bank',\n    label: 'CIMB Bank'\n  },\n  {\n    value: 'Public Bank',\n    label: 'Public Bank'\n  },\n  {\n    value: 'Hong Leong Bank',\n    label: 'Hong Leong Bank'\n  },\n  {\n    value: 'UOB',\n    label: 'UOB'\n  },\n  {\n    value: 'ANZ',\n    label: 'ANZ'\n  }\n]\nconst CustomerInfo = props => {\n  const [nameBank, setNameBank] = useState(undefined)\n  const [nameNetwork, setNameNetwork] = useState(undefined)\n  const [isOpenModal, setIsOpenModal] = useState(false)\n  const handleIsOpenModal = trueFalse => {\n    setIsOpenModal(trueFalse)\n  }\n  useEffect(() => {\n    setNameBank(props?.lotteryInfo?.tennganhang)\n    setNameNetwork(props?.lotteryInfo?.cryptoNetwork)\n  }, [props?.lotteryInfo])\n  useEffect(() => {}, [props?.lotteryInfo])\n  const isPermissionApprove = () => {\n    return listPermissionUser.includes('EDIT_USERS')\n  }\n  function handleChangeData(data) {\n    setNameBank(data.value)\n  }\n  function handleChangeNetWork(data) {\n    setNameNetwork(data.value)\n    console.log(data.value)\n  }\n  return (\n    <div className={'detail-customerInfo'}>\n      <Card className={'p-2'}>\n        <h3 className={'detail-title mb-3'}>{props?.title}</h3>\n        <div className={'d-flex'}>\n          <div className={'container-avatar'}>\n            <Avatar\n              img={props?.lotteryInfo?.userAvatar ? props?.lotteryInfo?.userAvatar : defaultAvatar}\n              imgHeight={'88'}\n              imgWidth={'88'}\n              width='88'\n              height='88'\n              style={{ marginBottom: '14px', cursor: 'auto' }}\n            />\n            <p className={'content-avatar'}>Số dư trong tài khoản</p>\n            <p className={'money-avatar'}>\n              Ví chính:{' '}\n              {currencyFormatUSD(\n                props?.lotteryInfo?.wallets.find(wallet => wallet.walletType === 'PointWallet').balance\n              )}\n            </p>\n          </div>\n          <Row className={'w-100 detail-input'}>\n            <Col lg={4} sm={6} xs={12}>\n              <FormGroup>\n                <Label>Tài khoản</Label>\n                <Input value={props?.lotteryInfo?.username || ''} disabled={true} />\n              </FormGroup>\n            </Col>\n            <Col lg={4} sm={6} xs={12}>\n              <FormGroup>\n                <Label>Tên tài khoản ngân hàng</Label>\n                <Input\n                  id={'tentaikhoan'}\n                  defaultValue={props?.lotteryInfo?.tentaikhoan || ''}\n                  disabled={props.disabled}\n                />\n              </FormGroup>\n            </Col>\n            <Col lg={4} sm={6} xs={12}>\n              <FormGroup>\n                <Label>Số tài khoản ngân hàng</Label>\n                <Input\n                  id={'sotaikhoan'}\n                  defaultValue={props?.lotteryInfo?.sotaikhoan || ''}\n                  disabled={props.disabled}\n                />\n              </FormGroup>\n            </Col>\n            <Col lg={4} sm={6} xs={12}>\n              <FormGroup>\n                <Label>Tên ngân hàng</Label>\n                {/* <Input\n                  id={\"tennganhang\"}\n                  defaultValue={props?.lotteryInfo?.tennganhang || \"\"}\n                  disabled={props.disabled}\n                /> */}\n                <Select\n                  isClearable={false}\n                  className='react-select'\n                  classNamePrefix='select'\n                  options={listbanks}\n                  placeholder={'Ngân hàng'}\n                  value={listbanks?.find(item => item.value === nameBank) || ''}\n                  onChange={value => handleChangeData(value)}\n                />\n              </FormGroup>\n            </Col>\n            <Col lg={4} sm={6} xs={12}>\n              <img alt='Before id' src={props?.lotteryInfo?.imageBeforeIdentityCard || ''} style={{ width: '100%' }} />\n            </Col>\n            <Col lg={4} sm={6} xs={12}>\n              <img alt='after id' src={props?.lotteryInfo?.imageAfterIdentityCard || ''} style={{ width: '100%' }} />\n            </Col>{' '}\n          </Row>\n        </div>\n        <Row\n          className={'m-0 mt-3  detail-input'}\n          style={{\n            borderTop: '2px solid #ebe9f1',\n            borderBottom: '2px solid #ebe9f1'\n          }}\n        >\n          <Col lg={12}>\n            <Card className={'py-1 mb-0'}>\n              <h4>Giao dịch</h4>\n              <Row className={'mt-2'}>\n                <Col lg={3}>\n                  <FormGroup>\n                    <Label>Tổng nạp</Label>\n                    <Input value={currencyFormatUSD(props?.lotteryInfo?.totalTodayDeposit || '')} disabled={true} />\n                  </FormGroup>\n                </Col>\n                <Col lg={3}>\n                  <FormGroup>\n                    <Label>Tổng rút</Label>\n                    <Input value={currencyFormatUSD(props?.lotteryInfo?.totalTodayWithdraw || '')} disabled={true} />\n                  </FormGroup>\n                </Col>\n                <Col lg={3}>\n                  <FormGroup>\n                    <Label>Tổng đặt</Label>\n                    <Input value={currencyFormatUSD(props?.lotteryInfo?.totalBet || '')} disabled={true} />\n                  </FormGroup>\n                </Col>\n                <Col lg={3}>\n                  <FormGroup>\n                    <Label>Tổng đặt hôm nay</Label>\n                    <Input value={currencyFormatUSD(props?.lotteryInfo?.totalTodayBet || '')} disabled={true} />\n                  </FormGroup>\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n        <div className={'d-flex align-items-center mt-3 justify-content-end'}>\n          {isPermissionApprove() && (\n            <Button\n              color='primary'\n              outline\n              className={'mr-2'}\n              onClick={() =>\n                props.handleChangeUser(\n                  document.getElementById('email')?.value,\n                  document.getElementById('tentaikhoan')?.value,\n                  document.getElementById('sotaikhoan')?.value,\n                  nameBank\n                )\n              }\n            >\n              Cập nhật\n            </Button>\n          )}\n          <Button\n            color='success'\n            outline\n            className={'mr-2'}\n            onClick={() => props.handleActiveUser(props?.lotteryInfo?.active)}\n          >\n            <Lock size={20} style={{ marginTop: '-2px', marginRight: '13px' }} />\n            {props?.lotteryInfo?.active === 1\n              ? 'Khoá tài khoản'\n              : props?.lotteryInfo?.active === 0\n              ? 'Mở tài khoản'\n              : ''}\n\n            {/*<div className=\"button-content\">*/}\n            {/*        <Lock size={20}/>*/}\n            {/*        <p>{props?.lotteryInfo?.active===1 ?\"Khoá tài khoản\": props?.lotteryInfo?.active===0 ?\"Mở tài khoản\":\"\"}</p>*/}\n            {/*    </div>*/}\n          </Button>\n          <Button color='danger' outline onClick={() => setIsOpenModal(true)}>\n            <RefreshCw size={20} style={{ marginTop: '-2px', marginRight: '13px' }} />\n            Đổi mật khẩu\n          </Button>\n        </div>\n      </Card>\n      <ModalUpdatePasswordCustomer\n        isOpenModal={isOpenModal}\n        handleIsOpenModal={handleIsOpenModal}\n        handleUpdatePasswordCustomer={props?.handleUpdatePasswordCustomer}\n      />\n    </div>\n  )\n}\nexport default CustomerInfo\n","// import {DropdownItem, DropdownMenu, DropdownToggle, UncontrolledDropdown} from \"reactstrap\";\n// import {Archive, FileText, MoreVertical} from \"react-feather\";\nimport {Link} from \"react-router-dom\";\nimport {currencyFormat, currencyFormatUSD} from \"../../../../ultils/currentFormacy\";\nimport {convertTimeDate} from \"../../../../ultils/convertDate\";\n\n\nexport const columnsDetail = (typeList)=>[\n    {\n        name: \"ID\",\n        minWidth: '150px',\n        cell: row => (\n            typeList === \"WalletRecord\"?\n                row?.[`${typeList}Id`]\n                :\n                <Link\n                    to={`${typeList===\"paymentDepositTransaction\"? \"/history/detail/PaymentDepositTransaction/\" : typeList===\"paymentWithdrawTransaction\" ? \"/history/detail/PaymentWithdrawTransaction/\": \"/purchase-list/detail/\"}${row?.[`${typeList}Id`]}`}\n                    className='user-name text-truncate mb-0'>\n                    <span>{row?.[`${typeList}Id`]}</span>\n                </Link>\n        )\n    },\n    typeList===\"WalletRecord\"?\n    {\n        name: 'THU',\n        minWidth: '250px',\n        cell: row => currencyFormatUSD(row?.paymentAmountIn||\"\")\n    }\n    :\n        typeList===\"productOrder\" ?\n            {\n                name: 'Số tiền',\n                minWidth: '250px',\n                cell: row => currencyFormatUSD(row?.total || 0)\n            }\n            :\n                {\n                    name: 'SỐ TIỀN',\n                    minWidth: '250px',\n                    cell: row => currencyFormatUSD(row?.paymentAmount||\"\")\n                },\n    typeList===\"WalletRecord\"?\n        {\n            name: 'CHI',\n            minWidth: '250px',\n            cell: row => currencyFormatUSD(row?.paymentAmountOut||\"\")\n\n        }:\n        typeList===\"productOrder\" ?\n            {\n                name: 'THỜI GIAN',\n                minWidth: '250px',\n                cell: row => convertTimeDate(row?.createdAt||\"\")\n            }\n        :\n        {\n            name: 'THỜI GIAN',\n            minWidth: '250px',\n            cell: row => convertTimeDate(row?.paymentApproveDate||\"\")\n        },\n    typeList===\"WalletRecord\"?\n        {\n            name: 'THỜI GIAN',\n            minWidth: '250px',\n            cell: row => convertTimeDate(row?.createdAt||\"\")\n\n        }:\n        typeList===\"productOrder\" ?\n            {\n                name: 'TRẠNG THÁI',\n                minWidth: '250px',\n                cell: row =>\n                        (row?.orderStatus === 'New' ? 'Mới' : row?.orderStatus===\"Completed\"? \"Hoàn thành\": \"\")\n            }\n        :\n        {\n            name: 'TRẠNG THÁI',\n            minWidth: '250px',\n            cell: row => row?.paymentStatus === \"Completed\" ? 'Đã duyệt' : row?.paymentStatus===\"Canceled\"? 'Từ chối': row?.paymentStatus===\"New\"? \"Chưa duyệt\":\"\"\n        },\n]","import { Card, Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport CustomPagination from \"../../../../components/Pagination/Pagination\";\nimport React, { useEffect, useState } from \"react\";\nimport { columnsDetail } from \"./column\";\nimport { ChevronDown } from \"react-feather\";\nimport Service from \"../../../../services/request\";\nimport { toast } from \"react-toastify\";\nimport Pagination from \"../../../../components/Pagination/Pagination\";\n\nconst typesHistoryCustomer = [\n  {\n    label: \"Danh sách nạp tiền\",\n    value: \"paymentDepositTransaction\",\n    api: \"/PaymentDepositTransaction/find\",\n  },\n  {\n    label: \"Danh sách rút tiền\",\n    value: \"paymentWithdrawTransaction\",\n    api: \"/PaymentWithdrawTransaction/find\",\n  },\n  {\n    label: \"Danh sách giao dịch\",\n    value: \"WalletRecord\",\n    api: \"/WalletRecord/find\",\n  },\n  // {\n  //     label:\"Danh sách đơn mua\",\n  //     value:\"productOrder\",\n  //     api:\"/ProductOrder/find\"\n  // }\n];\nconst CustomerHistory = (props) => {\n  const [activeTab, setActiveTab] = useState(\"0\");\n  const [typeAPI, setTypeAPI] = useState(typesHistoryCustomer[0].api);\n  const [typeList, setTypeList] = useState(typesHistoryCustomer[0].value);\n  const [listData, setListData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalRecords, setTotalRecords] = useState(0);\n  const rowPerPage = 6;\n  useEffect(() => {\n    const data = {\n      filter: {\n        appUserId: props.IdUser,\n      },\n      skip: currentPage,\n      limit: rowPerPage,\n    };\n    getDetailHistoryList(data);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [typeAPI]);\n\n  const toggle = (tab) => {\n    if (activeTab !== tab) {\n      setActiveTab(tab);\n    }\n  };\n\n  const handlePagination = (page) => {\n    const params = {\n      skip: page.selected * rowPerPage,\n      limit: rowPerPage,\n      filter: {\n        appUserId: props.IdUser,\n      },\n    };\n    setCurrentPage(page.selected * rowPerPage);\n    getDetailHistoryList(params);\n  };\n  const CustomPagination = () => {\n    return (\n      <Pagination\n        handlePagination={handlePagination}\n        currentPage={currentPage}\n        rowsPerPage={rowPerPage}\n        total={totalRecords}\n      />\n    );\n  };\n  const getDetailHistoryList = (data) => {\n    Service.send({\n      method: \"POST\",\n      path: typeAPI,\n      data: data,\n      headers: {},\n    }).then((res) => {\n      if (res) {\n        const { statusCode, data, message } = res;\n        if (statusCode === 200) {\n          setListData(data.data);\n          setTotalRecords(data?.total);\n        } else {\n          toast.warn(message || \"Đã có lỗi xảy ra!\");\n        }\n      } else {\n        setListData([]);\n      }\n    });\n  };\n\n  return (\n    <div>\n      <Card className={\"p-2\"}>\n        <Nav tabs>\n          {typesHistoryCustomer.map((value, index) => (\n            <NavItem key={index}>\n              <NavLink\n                active={activeTab === `${index}`}\n                onClick={() => {\n                  toggle(`${index}`);\n                  setTypeAPI(value.api);\n                  setTypeList(value.value);\n                  setCurrentPage(0);\n                }}\n              >\n                {value.label}\n              </NavLink>\n            </NavItem>\n          ))}\n        </Nav>\n        <TabContent activeTab={activeTab}>\n          {typesHistoryCustomer.map((value, index) => (\n            <TabPane tabId={`${index}`} key={index}>\n              <DataTable\n                columns={columnsDetail(typeList)}\n                noHeader\n                persistTableHead\n                data={listData}\n                sortIcon={<ChevronDown />}\n                className=\"datatable-custom-project p-0\"\n                noDataComponent={<h3>Không tìm thấy dữ liệu</h3>}\n              />\n              <div>\n                <CustomPagination />\n              </div>\n            </TabPane>\n          ))}\n        </TabContent>\n      </Card>\n    </div>\n  );\n};\nexport default CustomerHistory;\n","import { useParams } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport React, { useEffect, useState } from 'react'\nimport CustomerInfo from '../components/customer-info/CustomerInfo'\nimport Customer from '../../../services/customer'\nimport CustomerHistory from '../components/customer-history/CustomerHistory'\nimport { Button } from 'reactstrap'\nimport { useHistory } from 'react-router-dom'\nimport Loader from '../../../components/Loader'\n\nconst Detail = () => {\n  const history = useHistory()\n  const [data, setData] = useState(null)\n  const [isLoadingSubmit, setIsLoadingSubmit] = useState(false)\n\n  const { id } = useParams()\n  const validateEmail = email => {\n    let regexEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n    return !!email.match(regexEmail)\n  }\n  useEffect(() => {\n    detailLottery()\n  }, [id])\n  function detailLottery() {\n    Customer.detailCustomer({ id: id }).then(res => {\n      if (res) {\n        const { statusCode, data, message } = res\n        if (statusCode === 200) {\n          setData(data)\n        } else {\n          toast.warn(message || 'Đã có lỗi xảy ra!')\n        }\n      } else {\n      }\n    })\n  }\n  function handleActiveUser(value) {\n    if (value === 0) {\n      value = 1\n    } else value = 0\n\n    const params = {\n      id: id,\n      data: {\n        active: value\n      }\n    }\n    setIsLoadingSubmit(true)\n    Customer.updateDetailCustomer(params).then(res => {\n      setIsLoadingSubmit(false)\n      if (res) {\n        // eslint-disable-next-line no-unused-vars\n        const { statusCode, message } = res\n        if (statusCode === 200) {\n          detailLottery()\n          toast.success('Thành công')\n        } else {\n          toast.warn(message || 'Đã có lỗi xảy ra!')\n        }\n      } else {\n      }\n    })\n    detailLottery()\n  }\n  function handleChangeUser(\n    email,\n    tentaikhoan,\n    sotaikhoan,\n    tennganhang\n  ) {\n    const params = {\n      id: id,\n      data: {\n        email: email,\n        tentaikhoan: tentaikhoan || undefined,\n        sotaikhoan: sotaikhoan || undefined,\n        tennganhang: tennganhang || undefined\n      }\n    }\n\n    if (!tentaikhoan) {\n      toast.warn('Vui lòng nhập Tên tài khoản')\n      return\n    }\n    if (!sotaikhoan) {\n      toast.warn('Vui lòng nhập Số tài khoản')\n      return\n    }\n    if (!tennganhang) {\n      toast.warn('Vui lòng nhập Tên ngân hàng')\n      return\n    }\n\n    setIsLoadingSubmit(true)\n    Customer.updateDetailCustomer(params).then(res => {\n      setIsLoadingSubmit(false)\n      if (res) {\n        // eslint-disable-next-line no-unused-vars\n        const { statusCode, message } = res\n        if (statusCode === 200) {\n          detailLottery()\n          toast.success('Thành công')\n        } else {\n          toast.warn(message || 'Đã có lỗi xảy ra!')\n        }\n      } else {\n      }\n    })\n    detailLottery()\n  }\n  function handleUpdatePasswordCustomer(password) {\n    const params = {\n      id: id,\n      password: password\n    }\n    setIsLoadingSubmit(true)\n    Customer.updatePasswordCustomer(params).then(res => {\n      setIsLoadingSubmit(false)\n      if (res) {\n        // eslint-disable-next-line no-unused-vars\n        const { statusCode, message } = res\n        if (statusCode === 200) {\n          toast.success('Thành công')\n        } else {\n          toast.warn(message || 'Đã có lỗi xảy ra!')\n        }\n      } else {\n      }\n    })\n    detailLottery()\n  }\n  const PointWallet = () => {\n    let total = 0\n    data?.wallets.forEach(item => (total += item.balance))\n    return total\n  }\n\n  return (\n    <div>\n      {isLoadingSubmit ? <Loader /> : null}\n      <CustomerInfo\n        title={'Thông tin người dùng'}\n        disabled={false}\n        id={id}\n        lotteryInfo={data}\n        handleActiveUser={handleActiveUser}\n        handleChangeUser={handleChangeUser}\n        handleUpdatePasswordCustomer={handleUpdatePasswordCustomer}\n        totalWallets={PointWallet()}\n      />\n      <CustomerHistory IdUser={id} />\n      <div className={'d-flex justify-content-end align-items-center'}>\n        <Button\n          color={'primary'}\n          className={'mr-2'}\n          // onClick={() => history.push('/customer/list')}\n          onClick={() => history.go(-1)}\n        >\n          Trở lại\n        </Button>\n      </div>\n    </div>\n  )\n}\nexport default Detail\n","import moment from \"moment\";\n\nexport const convertTimeDate=(value)=>{\n    return moment(value?.toString()).format(\"HH:mm   DD/MM/YYYY\")\n}\nexport const convertDateVN=(value)=>{\n    return moment(value?.toString()).format(\"DD/MM/YYYY\")\n}","import { Spinner } from \"reactstrap\";\nimport \"./style/style.scss\";\n\nfunction Loader() {\n  return (\n    <div className={\"loader\"}>\n      <Spinner color=\"info\">Loading...</Spinner>\n    </div>\n  );\n}\nexport default Loader;\n","export const currencyFormat=(value)=>{\n    return new Intl.NumberFormat(\"vi-VN\").format(value)\n}\nexport const currencyFormatUSD = (value) => {\n    return new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 2\n    }).format(value)\n}\n","import {Label} from \"reactstrap\"\nimport ReactPaginate from \"react-paginate\"\nimport React from \"react\"\nimport './style/pagination.scss'\n\nconst Pagination = props => {\n    const {handlePagination, currentPage, rowsPerPage, total} = props\n    const totalItemPage = () => {\n        const totalRecords = total\n        if (totalRecords - (currentPage + 1 * rowsPerPage) < 0) {\n            return totalRecords\n        } else return (currentPage + 1) * rowsPerPage\n    }\n\n    const indexStartItem = () => {\n        if (currentPage === 0) {\n            return 1\n        } else return (rowsPerPage * (currentPage)) + 1\n    }\n\n    const count = Number(Math.ceil(total / rowsPerPage))\n\n    return count>1?(\n        <div className='d-flex align-items-center justify-content-between' id={'pagination'}>\n            <div className='d-flex align-items-center w-100 description-desktop'>\n                <Label for='rows-per-page' className={'mb-0'}>Hiển thị từ {indexStartItem()} - {totalItemPage()}/{total}</Label>\n            </div>\n            <ReactPaginate\n                previousLabel={''}\n                nextLabel={''}\n                pageCount={count || 1}\n                activeClassName='active'\n                forcePage={currentPage !== 0 ? currentPage/rowsPerPage : 0}\n                onPageChange={page => handlePagination(page)}\n                pageClassName={'page-item'}\n                nextLinkClassName={'page-link'}\n                nextClassName={'page-item next'}\n                previousClassName={'page-item prev'}\n                previousLinkClassName={'page-link'}\n                breakClassName={'page-item'}\n                breakLinkClassName={'page-link'}\n                pageLinkClassName={'page-link'}\n                containerClassName={'pagination react-paginate justify-content-end my-2 '}\n            />\n        </div>\n    ):\"\"\n}\nexport default Pagination\n","import Request from \"./request\";\nexport default class Customer {\n    static async listCustomer(data = {}) {\n        return new Promise((resolve, reject) => {\n            Request.send({\n                method: \"POST\",\n                path: \"/AppUsers/find\",\n                data: data,\n            }).then((result) => {\n                const { statusCode, error } = result\n                if (statusCode === 200) {\n                    resolve(result)\n                } else {\n                    reject(new Error(error));\n                }\n            }).catch(error => {\n                reject(error);\n            });\n        });\n    }\n    static async createProduct(data = {}) {\n        return new Promise((resolve, reject) => {\n            Request.send({\n                method: \"POST\",\n                path: \"/Product/insert\",\n                data: data,\n            }).then((result) => {\n                const { statusCode, error } = result\n                if (statusCode === 200) {\n                    resolve(result)\n                } else {\n                    reject(new Error(error));\n                }\n            }).catch(error => {\n                reject(error);\n            });\n        });\n    }\n    static async updateProduct(data = {}) {\n        return new Promise((resolve, reject) => {\n            Request.send({\n                method: \"POST\",\n                path: \"/Product/updateById\",\n                data: data,\n            }).then((result) => {\n                const { statusCode, error } = result\n                if (statusCode === 200) {\n                    resolve(result)\n                } else {\n                    reject(new Error(error));\n                }\n            }).catch(error => {\n                reject(error);\n            });\n        });\n    }\n    static async detailCustomer(data = {}) {\n        return new Promise((resolve, reject) => {\n            Request.send({\n                method: \"POST\",\n                path: \"/AppUsers/findById\",\n                data: data,\n            }).then((result) => {\n                const { statusCode, error } = result\n                if (statusCode === 200) {\n                    resolve(result)\n                } else {\n                    reject(new Error(error));\n                }\n            }).catch(error => {\n                reject(error);\n            });\n        });\n    }\n    static async uploadImage(params) {\n        return new Promise((resolve, reject) => {\n            Request.send({\n                method: \"POST\",\n                path: \"/Upload/uploadMediaFile\",\n                data: params\n            }).then(result => {\n                const { statusCode, data, message } = result\n                if (statusCode === 200) {\n                    resolve(data)\n                } else {\n                    throw new Error(message);\n                }\n            }).catch(error => {\n                reject(error);\n            })\n        })\n    }\n    static async changeIncreaseDecreasePoint(params,type) {\n        return new Promise((resolve, reject) => {\n            Request.send({\n                method: \"POST\",\n                path: `/Wallet/${type}Balance`,\n                data: params\n            }).then(result => {\n                const { statusCode, data, message } = result\n                if (statusCode === 200) {\n                    resolve(result)\n                } else {\n                    throw new Error(message);\n                }\n            }).catch(error => {\n                reject(error);\n            })\n        })\n    }\n    static async updateDetailCustomer(params) {\n        return new Promise((resolve, reject) => {\n            Request.send({\n                method: \"POST\",\n                path: `/AppUsers/updateUserById`,\n                data: params\n            }).then(result => {\n                const { statusCode, data, message } = result\n                if (statusCode === 200) {\n                    resolve(result)\n                } else {\n                    throw new Error(message);\n                }\n            }).catch(error => {\n                reject(error);\n            })\n        })\n    }\n\n    static async updatePasswordCustomer(params) {\n        return new Promise((resolve, reject) => {\n            Request.send({\n                method: \"POST\",\n                path: `/AppUsers/adminChangePasswordUser`,\n                data: params\n            }).then(result => {\n                const { statusCode, data, message } = result\n                if (statusCode === 200) {\n                    resolve(result)\n                } else {\n                    throw new Error(message);\n                }\n            }).catch(error => {\n                reject(error);\n            })\n        })\n    }\n}\n"],"sourceRoot":""}