{"version":3,"sources":["../node_modules/reactstrap/es/CardBody.js","services/withdrawHistoryService.js","../node_modules/reactstrap/es/CardText.js","views/pages/manager-transaction/withdrawTransaction/detailWithdraw.js"],"names":["propTypes","tag","tagPropType","className","PropTypes","string","cssModule","object","innerRef","oneOfType","func","CardBody","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","WithdrawHistory","params","Promise","resolve","reject","Request","send","method","path","data","then","result","statusCode","message","id","error","Error","catch","CardText","injectIntl","intl","open","toggleSidebar","arrData","onReloadData","isOpen","toggle","formatMessage","firstName","size","paymentWithdrawTransactionId","username","lastName","email","phoneNumber","createdAt","moment","utc","format","paymentStatus","paymentApproveDate","status","getPaymentStatusDescription","paymentAmount","parseFloat","Number","toFixed","Ripple","color","type","onClick","event","preventDefault","approveWithdrawTransaction","toast","success","err","handleApprove","outline","denyWithdrawTransaction","warn","handleRefused","elements"],"mappings":"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","file":"static/js/81.d45a93e6.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import Request from './request'\n\nexport default class WithdrawHistory {\n  static async findWithdrawHistory(params) {\n    return new Promise((resolve, reject) => { \n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentWithdrawTransaction/find\",\n        data:params\n      }).then(result =>{ \n        const { statusCode, data,message} = result\n        if(statusCode === 200) {\n          resolve(data)\n        } else {\n          reject(message)\n        }\n      })\n    })\n  }\n\n  static async findDetailWithdrawHistory(id) {\n    return new Promise((resolve, reject) => { \n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentWithdrawTransaction/findById\",\n        data: {\n          id: id,\n        }\n      }).then(result =>{ \n        const { statusCode, data,message} = result\n        if(statusCode === 200) {\n          resolve(data)\n        } else {\n          reject(message)\n        }\n      })\n    })\n  }\n\n  static async approveWithdrawTransaction(params) {\n    return new Promise((resolve, reject) => { \n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentWithdrawTransaction/approveWithdrawTransaction\",\n        data:params\n      }).then(result =>{ \n        const { statusCode, data,message} = result\n        if(statusCode === 200) {\n          resolve(data)\n        } else {\n          reject(message)\n        }\n      })\n    })\n  }\n  static async denyWithdrawTransaction(params) {\n    return new Promise((resolve, reject) => { \n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentWithdrawTransaction/denyWithdrawTransaction\",\n        data:params\n      }).then(result =>{ \n        const { statusCode, data,message} = result\n        if(statusCode === 200) {\n          resolve(data)\n        } else {\n          reject(message)\n        }\n      })\n    })\n  }\n\n  static async insertPaymentWithdraw(params) {\n    return new Promise((resolve, reject) => {\n      Request.send({\n        method: \"POST\",\n        path: \"/PaymentWithdrawTransaction/insert\",\n        data: params, \n      }).then((result) => {\n        const { statusCode, error } = result;\n        if (statusCode === 200) {\n          return resolve();\n        } else {\n          reject(new Error(error));\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'p'\n};\n\nvar CardText = function CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardText.propTypes = propTypes;\nCardText.defaultProps = defaultProps;\nexport default CardText;","import React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Fragment } from \"react\";\nimport {\n  Calendar,\n  DollarSign,\n  User,\n  Star,\n  Flag,\n  Phone,\n  UserCheck,\n} from \"react-feather\";\nimport {\n  CardBody,\n  CardText,\n  Button,\n  Row,\n  FormGroup,\n  Modal,\n  ModalHeader,\n  ModalBody,\n} from \"reactstrap\";\nimport moment from \"moment\";\nimport { addCommas } from \"@utils\";\nimport WithdrawHistory from \"../../../../services/withdrawHistoryService\";\nimport { toast } from \"react-toastify\";\n\nfunction DetailWithdrawHistory({\n  intl,\n  open,\n  toggleSidebar,\n  arrData,\n  onReloadData,\n}) {\n  \n  function handleApprove() {\n    const params = {\n      id: arrData.paymentWithdrawTransactionId,\n    };\n    WithdrawHistory.approveWithdrawTransaction(params)\n      .then(() => {\n        onReloadData();\n        toast.success(\n          intl.formatMessage({ id: \"update_approve_withdraw_success\" })\n        );\n      })\n      .catch((err) => {\n        toast.success(intl.formatMessage({ id: \"actionFailed\" }), err);\n      });\n  }\n\n  const handleRefused = () => {\n    const params = {\n      id: arrData.paymentWithdrawTransactionId,\n    };\n    WithdrawHistory.denyWithdrawTransaction(params)\n      .then((result) => {\n        onReloadData();\n        toast.warn(\n          intl.formatMessage({ id: \"update_approve_withdraw_success\" })\n        );\n      })\n      .catch((err) => {\n        toast.warn(intl.formatMessage({ id: \"actionFailed\" }, err));\n      });\n  };\n\n  const elements = () => {\n    switch (arrData.paymentStatus) {\n      case \"New\":\n        return (\n          <div>\n            <Button.Ripple\n              className=\"mr-3\"\n              color=\"primary\"\n              type=\"submit\"\n              onClick={(event) => {\n                event.preventDefault();\n                handleApprove()\n              }}\n              outline\n            >\n              {intl.formatMessage({ id: \"approve_withdraw\" })}\n            </Button.Ripple>\n            <Button.Ripple\n              color=\"danger\"\n              type=\"submit\"\n              onClick={(event) => {\n                event.preventDefault();\n                handleRefused()\n              }}\n              outline\n            >\n              {intl.formatMessage({ id: \"deny_withdraw\" })}\n            </Button.Ripple>\n          </div>\n        );\n      default:\n        return;\n    }\n  };\n\n  const getPaymentStatusDescription = (status) => {\n    switch (status) {\n      case \"Completed\":\n        return intl.formatMessage({ id: \"Completed\" });\n      case \"New\":\n        return intl.formatMessage({ id: \"New\" });\n      case \"Canceled\":\n        return intl.formatMessage({ id: \"Canceled\" });\n      default:\n        return \"N/A\";\n    }\n  };\n\n  return (\n    <Fragment>\n      <Modal\n        isOpen={open}\n        toggle={toggleSidebar}\n        className={`modal-dialog modal-lg `}\n      >\n        <ModalHeader toggle={toggleSidebar}>\n          {intl.formatMessage({ id: \"detail_user\" })} {arrData.firstName}\n        </ModalHeader>\n        <ModalBody>\n        <CardBody>\n          <h2>{intl.formatMessage({ id: \"historyWithdrawByUser\" })}</h2>\n          <div className=\"my-2\">\n          <Row className=\"mx-auto mb-1\">\n              <div className=\"d-flex col-sm-5 col-md-4 col-lg-3\">\n                <Star className=\"mr-1\" size={14} />\n                <CardText tag=\"span\" className=\"font-weight-bold\">\n                  {intl.formatMessage({ id: \"paymentWithdrawTransactionId\" })}:\n                </CardText>\n              </div>\n              <div className=\"col-sm-7 col-md-6 col-lg-6\">\n                <CardText>\n                  {arrData.paymentWithdrawTransactionId === null\n                    ? \"\"\n                    : arrData.paymentWithdrawTransactionId}\n                </CardText>\n              </div>\n            </Row>\n            <Row className=\"mx-auto mb-1\">\n              <div className=\"d-flex col-sm-5 col-md-4 col-lg-3\">\n                <User className=\"mr-1\" size={14} />\n                <CardText tag=\"span\" className=\"font-weight-bold\">\n                  {intl.formatMessage({ id: \"username\" })}:\n                </CardText>\n              </div>\n              <div className=\"col-sm-7 col-md-6 col-lg-6\">\n                <CardText>\n                  {arrData.username === null\n                    ? \"\"\n                    : arrData.username}\n                </CardText>\n              </div>\n            </Row>\n            <Row className=\"mx-auto mb-1\">\n              <div className=\"d-flex col-sm-5 col-md-4 col-lg-3\">\n                <Star className=\"mr-1\" size={14} />\n                <CardText tag=\"span\" className=\"font-weight-bold\">\n                  {intl.formatMessage({ id: \"fullname\" })}:\n                </CardText>\n              </div>\n              <div className=\"col-sm-7 col-md-6 col-lg-6\">\n                <CardText>\n                  {arrData.firstName === null\n                    ? \"\"\n                    : arrData.firstName}{\" \"}\n                  {arrData.lastName === null\n                    ? \"\"\n                    : arrData.lastName}\n                </CardText>\n              </div>\n            </Row>\n\n            <Row className=\"mx-auto mb-1\">\n              <div className=\"d-flex col-sm-5 col-md-4 col-lg-3\">\n                <User className=\"mr-1\" size={14} />\n                <CardText tag=\"span\" className=\"font-weight-bold\">\n                  {intl.formatMessage({ id: \"Email\" })}:\n                </CardText>\n              </div>\n              <div className=\"col-sm-7 col-md-6 col-lg-6\">\n                <CardText>\n                  {arrData.email === null\n                    ? \"\"\n                    : arrData.email}\n                </CardText>\n              </div>\n            </Row>\n\n            <Row className=\"mx-auto mb-1\">\n              <div className=\"d-flex col-sm-5 col-md-4 col-lg-3\">\n                <Phone className=\"mr-1\" size={14} />\n                <CardText tag=\"span\" className=\"font-weight-bold\">\n                  {intl.formatMessage({ id: \"phoneNumber\" })}:\n                </CardText>\n              </div>\n              <div className=\"col-sm-7 col-md-6 col-lg-6\">\n                <CardText>\n                  {arrData.phoneNumber === null\n                    ? \"\"\n                    : arrData.phoneNumber}\n                </CardText>\n              </div>\n            </Row>\n            {/* <Row className=\"mx-auto mb-1\">\n              <div className=\"d-flex col-sm-5 col-md-4 col-lg-3\">\n                <User className=\"mr-1\" size={14} />\n                <CardText tag=\"span\" className=\"font-weight-bold\">\n                  {intl.formatMessage({ id: \"diachiviUSDT\" })}:\n                </CardText>\n              </div>\n              <div className=\"col-sm-7 col-md-6 col-lg-6\">\n                <CardText>\n                  {arrData.diachiviUSDT === null\n                    ? \"\"\n                    : arrData.diachiviUSDT}\n                </CardText>\n              </div>\n            </Row> */}\n            {/* <Row className=\"mx-auto mb-1\">\n                <div className=\"d-flex col-sm-5 col-md-4 col-lg-3\">\n                  <UserCheck className=\"mr-1\" size={14} />\n                  <CardText tag=\"span\" className=\"font-weight-bold\">\n                    {intl.formatMessage({ id: \"code_transaction\" })}:\n                  </CardText>\n                </div>\n                <div className=\"col-sm-7 col-md-6 col-lg-6\">\n                  <CardText>\n                    {arrData.paymentRef === null ? \"\" : arrData.paymentRef}\n                  </CardText>\n                </div>\n              </Row> */}\n            {/* <Row className=\"mx-auto mb-1\">\n              <div className=\"d-flex col-sm-5 col-md-4 col-lg-3\">\n                <UserCheck className=\"mr-1\" size={14} />\n                <CardText tag=\"span\" className=\"font-weight-bold\">\n                  {intl.formatMessage({ id: \"memberLevelName\" })}:\n                </CardText>\n              </div>\n              <div className=\"col-sm-7 col-md-6 col-lg-6\">\n                <CardText>\n                  {arrData.appUserMembershipTitle === null\n                    ? intl.formatMessage({ id: \"new_member\" })\n                    : arrData.appUserMembershipTitle}\n                </CardText>\n              </div>\n            </Row> */}\n            {/* <Row className=\"mx-auto mb-1\">\n              <div className=\"d-flex col-sm-5 col-md-4 col-lg-3\">\n                <UserCheck className=\"mr-1\" size={14} />\n                <CardText tag=\"span\" className=\"font-weight-bold\">\n                  {intl.formatMessage({ id: \"paymentPICId\" })}:\n                </CardText>\n              </div>\n              <div className=\"col-sm-7 col-md-6 col-lg-6\">\n                <CardText>\n                  {arrData.paymentPICId === null\n                    ? \"\"\n                    : arrData.paymentPICId}\n                </CardText>\n              </div>\n            </Row> */}\n            <Row className=\"mx-auto mb-1\">\n              <div className=\"d-flex col-sm-5 col-md-4 col-lg-3\">\n                <Calendar className=\"mr-1\" size={14} />\n                <CardText tag=\"span\" className=\"font-weight-bold\">\n                  {intl.formatMessage({ id: \"createdAt\" })}:\n                </CardText>\n              </div>\n              <div className=\"col-sm-7 col-md-6 col-lg-6\">\n                <CardText>\n                  {arrData.createdAt === null\n                    ? \"\"\n                    : moment\n                        .utc(moment(arrData.createdAt))\n                        .format(\"HH:mm DD/MM/YYYY\")}\n                </CardText>\n              </div>\n            </Row>\n            {arrData.paymentStatus !== \"New\" && <Row className=\"mx-auto mb-1\">\n              <div className=\"d-flex col-sm-5 col-md-4 col-lg-3\">\n                <Calendar className=\"mr-1\" size={14} />\n                <CardText tag=\"span\" className=\"font-weight-bold\">\n                  {intl.formatMessage({ id: \"paymentApproveDate\" })}:\n                </CardText>\n              </div>\n              <div className=\"col-sm-7 col-md-6 col-lg-6\">\n                <CardText>\n                  {arrData.paymentApproveDate === null\n                    ? \"\"\n                    : moment\n                        .utc(moment(arrData.paymentApproveDate))\n                        .format(\"HH:mm DD/MM/YYYY\")}\n                </CardText>\n              </div>\n            </Row>}\n            <Row className=\"mx-auto mb-1\">\n              <div className=\"d-flex col-sm-5 col-md-4 col-lg-3\">\n                <Flag className=\"mr-1\" size={14} />\n                <CardText tag=\"span\" className=\"font-weight-bold\">\n                  {intl.formatMessage({ id: \"status\" })}:\n                </CardText>\n              </div>\n              <div className=\"col-sm-7 col-md-6 col-lg-6\">\n                <CardText>\n                  {arrData.paymentStatus\n                    ? getPaymentStatusDescription(\n                        arrData.paymentStatus\n                      )\n                    : \"\"}\n                </CardText>\n              </div>\n            </Row>\n            <Row className=\"mx-auto mb-1\">\n              <div className=\"d-flex col-sm-5 col-md-4 col-lg-3\">\n                <DollarSign className=\"mr-1\" size={14} />\n                <CardText tag=\"span\" className=\"font-weight-bold\">\n                  {intl.formatMessage({ id: \"payment_amount\" })}:\n                </CardText>\n              </div>\n              <div className=\"col-sm-7 col-md-6 col-lg-6 d-flex\">\n                <CardText>\n                  {arrData.paymentAmount\n                    ? parseFloat(Number(arrData.paymentAmount).toFixed(2))\n                    : \"\"}\n                </CardText>\n                <CardText tag=\"span\" className=\"ml-1\">\n                  USDT\n                </CardText>\n              </div>\n            </Row>\n          </div>\n          <FormGroup className=\"mt-3\">{elements()}</FormGroup>\n        </CardBody>\n        </ModalBody>\n      </Modal>\n    </Fragment>\n  );\n}\nexport default injectIntl(DetailWithdrawHistory);\n\n"],"sourceRoot":""}